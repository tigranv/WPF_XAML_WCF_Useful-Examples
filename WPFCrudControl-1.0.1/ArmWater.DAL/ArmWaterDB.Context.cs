//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArmWater.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GlobalDBEntities : DbContext
    {
        public GlobalDBEntities()
            : base("name=GlobalDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BS_ACTION_INFO> BS_ACTION_INFO { get; set; }
        public virtual DbSet<BS_DETAIL_INFO> BS_DETAIL_INFO { get; set; }
        public virtual DbSet<BS_GROUP> BS_GROUP { get; set; }
        public virtual DbSet<BS_LANG> BS_LANG { get; set; }
        public virtual DbSet<BS_LIB_INFO> BS_LIB_INFO { get; set; }
        public virtual DbSet<BS_LIB_RELATION_INFO> BS_LIB_RELATION_INFO { get; set; }
        public virtual DbSet<BS_METHOD_INFO> BS_METHOD_INFO { get; set; }
        public virtual DbSet<BS_NOTIFICATION_INFO> BS_NOTIFICATION_INFO { get; set; }
        public virtual DbSet<BS_OTHER_SYSTEMS> BS_OTHER_SYSTEMS { get; set; }
        public virtual DbSet<BS_PRIVILEGE_CLASS> BS_PRIVILEGE_CLASS { get; set; }
        public virtual DbSet<BS_PRIVILEGE_CLASS_TYPE> BS_PRIVILEGE_CLASS_TYPE { get; set; }
        public virtual DbSet<BS_PRIVILEGE_DETAILS> BS_PRIVILEGE_DETAILS { get; set; }
        public virtual DbSet<BS_PRIVILEGE_METHOD> BS_PRIVILEGE_METHOD { get; set; }
        public virtual DbSet<BS_PRIVILEGE_PROP> BS_PRIVILEGE_PROP { get; set; }
        public virtual DbSet<BS_PRIVILEGE_TASK> BS_PRIVILEGE_TASK { get; set; }
        public virtual DbSet<BS_PROC_NAMES> BS_PROC_NAMES { get; set; }
        public virtual DbSet<BS_PROP_INFO> BS_PROP_INFO { get; set; }
        public virtual DbSet<BS_QUERY> BS_QUERY { get; set; }
        public virtual DbSet<BS_QUERY_BUILDER> BS_QUERY_BUILDER { get; set; }
        public virtual DbSet<BS_REPORT_INFO> BS_REPORT_INFO { get; set; }
        public virtual DbSet<BS_STANDARD_REPORTS> BS_STANDARD_REPORTS { get; set; }
        public virtual DbSet<BS_STANDARD_REPORTS_BUILDER> BS_STANDARD_REPORTS_BUILDER { get; set; }
        public virtual DbSet<BS_STANDARD_REPORTS_PROP> BS_STANDARD_REPORTS_PROP { get; set; }
        public virtual DbSet<BS_STRING> BS_STRING { get; set; }
        public virtual DbSet<BS_TABLE_SEQUENCES> BS_TABLE_SEQUENCES { get; set; }
        public virtual DbSet<BS_USER> BS_USER { get; set; }
        public virtual DbSet<TAWDBBANK> TAWDBBANKs { get; set; }
        public virtual DbSet<TAWDBBILLINGCYCLE> TAWDBBILLINGCYCLEs { get; set; }
        public virtual DbSet<TAWDBBILLINGCYCLEPLAN> TAWDBBILLINGCYCLEPLANs { get; set; }
        public virtual DbSet<TAWDBBILLINGCYCLEROUTE> TAWDBBILLINGCYCLEROUTEs { get; set; }
        public virtual DbSet<TAWDBBILLINGCYCLEVISIT> TAWDBBILLINGCYCLEVISITs { get; set; }
        public virtual DbSet<TAWDBBRANCH> TAWDBBRANCHes { get; set; }
        public virtual DbSet<TAWDBBRANCHACCOUNT> TAWDBBRANCHACCOUNTs { get; set; }
        public virtual DbSet<TAWDBCALCINTERVAL> TAWDBCALCINTERVALs { get; set; }
        public virtual DbSet<TAWDBCITY> TAWDBCITies { get; set; }
        public virtual DbSet<TAWDBCONTRACTGROUP> TAWDBCONTRACTGROUPs { get; set; }
        public virtual DbSet<TAWDBCOUNTER> TAWDBCOUNTERs { get; set; }
        public virtual DbSet<TAWDBCOURTCASE> TAWDBCOURTCASEs { get; set; }
        public virtual DbSet<TAWDBCUSTOMSERVICE> TAWDBCUSTOMSERVICEs { get; set; }
        public virtual DbSet<TAWDBDEBTCOVERCONTRACT> TAWDBDEBTCOVERCONTRACTs { get; set; }
        public virtual DbSet<TAWDBDEBTSCHEDULE> TAWDBDEBTSCHEDULEs { get; set; }
        public virtual DbSet<TAWDBDRAINAGEPOINT> TAWDBDRAINAGEPOINTs { get; set; }
        public virtual DbSet<TAWDBEMPLOYEE> TAWDBEMPLOYEEs { get; set; }
        public virtual DbSet<TAWDBFINANCETYPE> TAWDBFINANCETYPEs { get; set; }
        public virtual DbSet<TAWDBFINANCIALSTATEMENT> TAWDBFINANCIALSTATEMENTs { get; set; }
        public virtual DbSet<TAWDBFINANCIALSTATEMENTMONTH> TAWDBFINANCIALSTATEMENTMONTHS { get; set; }
        public virtual DbSet<TAWDBINDICATION> TAWDBINDICATIONs { get; set; }
        public virtual DbSet<TAWDBINSPECTION> TAWDBINSPECTIONs { get; set; }
        public virtual DbSet<TAWDBINSPECTOR> TAWDBINSPECTORs { get; set; }
        public virtual DbSet<TAWDBINVOICEGROUPING> TAWDBINVOICEGROUPINGs { get; set; }
        public virtual DbSet<TAWDBOLDDUTYFSM> TAWDBOLDDUTYFSMs { get; set; }
        public virtual DbSet<TAWDBOLDDUTYORGCNTCALC> TAWDBOLDDUTYORGCNTCALCs { get; set; }
        public virtual DbSet<TAWDBOLDDUTYRESCNTCALC> TAWDBOLDDUTYRESCNTCALCs { get; set; }
        public virtual DbSet<TAWDBORGANIZATIONCONTRACT> TAWDBORGANIZATIONCONTRACTs { get; set; }
        public virtual DbSet<TAWDBORGCONTRACTCALC> TAWDBORGCONTRACTCALCs { get; set; }
        public virtual DbSet<TAWDBPAYMENT> TAWDBPAYMENTs { get; set; }
        public virtual DbSet<TAWDBREGION> TAWDBREGIONs { get; set; }
        public virtual DbSet<TAWDBRESCONTRACTCALC> TAWDBRESCONTRACTCALCs { get; set; }
        public virtual DbSet<TAWDBRESIDENTCONTRACT> TAWDBRESIDENTCONTRACTs { get; set; }
        public virtual DbSet<TAWDBSNINDICATIONMAP> TAWDBSNINDICATIONMAPs { get; set; }
        public virtual DbSet<TAWDBSTATEMENT> TAWDBSTATEMENTs { get; set; }
        public virtual DbSet<TAWDBSTATEMENTMONTH> TAWDBSTATEMENTMONTHS { get; set; }
        public virtual DbSet<TAWDBSUBSPHERE> TAWDBSUBSPHEREs { get; set; }
        public virtual DbSet<TAWDBSUPPLYNODE> TAWDBSUPPLYNODEs { get; set; }
        public virtual DbSet<TAWDBSUPPLYNODECALC> TAWDBSUPPLYNODECALCs { get; set; }
        public virtual DbSet<TAWDBSUPPLYSCHEDULE> TAWDBSUPPLYSCHEDULEs { get; set; }
        public virtual DbSet<TAWDBTERRITORY> TAWDBTERRITORies { get; set; }
        public virtual DbSet<TAWDBWATERPOINT> TAWDBWATERPOINTs { get; set; }
        public virtual DbSet<TJODBCLASSPRIVELEGE> TJODBCLASSPRIVELEGEs { get; set; }
        public virtual DbSet<TJODBCSTSPRIVELEGE> TJODBCSTSPRIVELEGEs { get; set; }
        public virtual DbSet<TJODBDETAILPRIVELEGE> TJODBDETAILPRIVELEGEs { get; set; }
        public virtual DbSet<TJODBGLOBALPROPERTY> TJODBGLOBALPROPERTies { get; set; }
        public virtual DbSet<TJODBGROUP> TJODBGROUPs { get; set; }
        public virtual DbSet<TJODBHISTORY> TJODBHISTORies { get; set; }
        public virtual DbSet<TJODBLIBVALUE> TJODBLIBVALUEs { get; set; }
        public virtual DbSet<TJODBLIBVALUE257> TJODBLIBVALUE257 { get; set; }
        public virtual DbSet<TJODBLIBVALUE258> TJODBLIBVALUE258 { get; set; }
        public virtual DbSet<TJODBLIBVALUE259> TJODBLIBVALUE259 { get; set; }
        public virtual DbSet<TJODBLIBVALUE261> TJODBLIBVALUE261 { get; set; }
        public virtual DbSet<TJODBLIBVALUE262> TJODBLIBVALUE262 { get; set; }
        public virtual DbSet<TJODBLIBVALUE264> TJODBLIBVALUE264 { get; set; }
        public virtual DbSet<TJODBLIBVALUE265> TJODBLIBVALUE265 { get; set; }
        public virtual DbSet<TJODBLIBVALUE266> TJODBLIBVALUE266 { get; set; }
        public virtual DbSet<TJODBLIBVALUE267> TJODBLIBVALUE267 { get; set; }
        public virtual DbSet<TJODBLIBVALUE5> TJODBLIBVALUE5 { get; set; }
        public virtual DbSet<TJODBMETHODPRIVELEGE> TJODBMETHODPRIVELEGEs { get; set; }
        public virtual DbSet<TJODBPROPPRIVELEGE> TJODBPROPPRIVELEGEs { get; set; }
        public virtual DbSet<TJODBQRFIXEDLINE> TJODBQRFIXEDLINEs { get; set; }
        public virtual DbSet<TJODBQRLOOPLINE> TJODBQRLOOPLINEs { get; set; }
        public virtual DbSet<TJODBQRREPORT> TJODBQRREPORTs { get; set; }
        public virtual DbSet<TJODBQUERY> TJODBQUERies { get; set; }
        public virtual DbSet<TJODBUSER> TJODBUSERs { get; set; }
        public virtual DbSet<BS_OLD_NEW_DUTY_REPORT> BS_OLD_NEW_DUTY_REPORT { get; set; }
        public virtual DbSet<BS_PROCESS> BS_PROCESS { get; set; }
        public virtual DbSet<BS_PROCESS_INFO> BS_PROCESS_INFO { get; set; }
        public virtual DbSet<BS_SERVICE> BS_SERVICE { get; set; }
        public virtual DbSet<BS_USER_ACTION_LOG> BS_USER_ACTION_LOG { get; set; }
    
        [DbFunction("GlobalDBEntities", "fn_GetAllCustomerTableNames")]
        public virtual IQueryable<fn_GetAllCustomerTableNames_Result> fn_GetAllCustomerTableNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetAllCustomerTableNames_Result>("[GlobalDBEntities].[fn_GetAllCustomerTableNames]()");
        }
    
        [DbFunction("GlobalDBEntities", "fn_GetAllTableNames")]
        public virtual IQueryable<fn_GetAllTableNames_Result> fn_GetAllTableNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetAllTableNames_Result>("[GlobalDBEntities].[fn_GetAllTableNames]()");
        }
    
        [DbFunction("GlobalDBEntities", "fn_GetAllTableNamesAndColumnsForChangingCalculatedField")]
        public virtual IQueryable<fn_GetAllTableNamesAndColumnsForChangingCalculatedField_Result> fn_GetAllTableNamesAndColumnsForChangingCalculatedField()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetAllTableNamesAndColumnsForChangingCalculatedField_Result>("[GlobalDBEntities].[fn_GetAllTableNamesAndColumnsForChangingCalculatedField]()");
        }
    
        [DbFunction("GlobalDBEntities", "fn_GetAllTableNamesAndColumnsForReCalculationOfChangedCalculatedField")]
        public virtual IQueryable<fn_GetAllTableNamesAndColumnsForReCalculationOfChangedCalculatedField_Result> fn_GetAllTableNamesAndColumnsForReCalculationOfChangedCalculatedField()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetAllTableNamesAndColumnsForReCalculationOfChangedCalculatedField_Result>("[GlobalDBEntities].[fn_GetAllTableNamesAndColumnsForReCalculationOfChangedCalculatedField]()");
        }
    
        [DbFunction("GlobalDBEntities", "fn_GetAllTableNamesForChangingCalculatedField")]
        public virtual IQueryable<fn_GetAllTableNamesForChangingCalculatedField_Result> fn_GetAllTableNamesForChangingCalculatedField()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetAllTableNamesForChangingCalculatedField_Result>("[GlobalDBEntities].[fn_GetAllTableNamesForChangingCalculatedField]()");
        }
    
        [DbFunction("GlobalDBEntities", "fn_GetAllTableNamesForReCalculationOfChangedCalculatedField")]
        public virtual IQueryable<fn_GetAllTableNamesForReCalculationOfChangedCalculatedField_Result> fn_GetAllTableNamesForReCalculationOfChangedCalculatedField()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetAllTableNamesForReCalculationOfChangedCalculatedField_Result>("[GlobalDBEntities].[fn_GetAllTableNamesForReCalculationOfChangedCalculatedField]()");
        }
    
        [DbFunction("GlobalDBEntities", "fn_GetTableNamesForAdditionalDataCopyingForRestoring")]
        public virtual IQueryable<fn_GetTableNamesForAdditionalDataCopyingForRestoring_Result> fn_GetTableNamesForAdditionalDataCopyingForRestoring()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetTableNamesForAdditionalDataCopyingForRestoring_Result>("[GlobalDBEntities].[fn_GetTableNamesForAdditionalDataCopyingForRestoring]()");
        }
    
        [DbFunction("GlobalDBEntities", "fn_GetTableNamesForDataCopyingDuringSetup")]
        public virtual IQueryable<fn_GetTableNamesForDataCopyingDuringSetup_Result> fn_GetTableNamesForDataCopyingDuringSetup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetTableNamesForDataCopyingDuringSetup_Result>("[GlobalDBEntities].[fn_GetTableNamesForDataCopyingDuringSetup]()");
        }
    
        [DbFunction("GlobalDBEntities", "fn_GetTableNamesForManageableDataCopyingForRestoring")]
        public virtual IQueryable<fn_GetTableNamesForManageableDataCopyingForRestoring_Result> fn_GetTableNamesForManageableDataCopyingForRestoring()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetTableNamesForManageableDataCopyingForRestoring_Result>("[GlobalDBEntities].[fn_GetTableNamesForManageableDataCopyingForRestoring]()");
        }
    
        [DbFunction("GlobalDBEntities", "fn_GetTableNamesForModifiedDataBackupingForArchiving")]
        public virtual IQueryable<fn_GetTableNamesForModifiedDataBackupingForArchiving_Result> fn_GetTableNamesForModifiedDataBackupingForArchiving()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetTableNamesForModifiedDataBackupingForArchiving_Result>("[GlobalDBEntities].[fn_GetTableNamesForModifiedDataBackupingForArchiving]()");
        }
    
        [DbFunction("GlobalDBEntities", "fn_GetTableNamesForSequences")]
        public virtual IQueryable<fn_GetTableNamesForSequences_Result> fn_GetTableNamesForSequences()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetTableNamesForSequences_Result>("[GlobalDBEntities].[fn_GetTableNamesForSequences]()");
        }
    
        [DbFunction("GlobalDBEntities", "fn_GetTableNamesWithClientTypeByCustomerForSequences")]
        public virtual IQueryable<fn_GetTableNamesWithClientTypeByCustomerForSequences_Result> fn_GetTableNamesWithClientTypeByCustomerForSequences()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetTableNamesWithClientTypeByCustomerForSequences_Result>("[GlobalDBEntities].[fn_GetTableNamesWithClientTypeByCustomerForSequences]()");
        }
    
        [DbFunction("GlobalDBEntities", "fn_GetTableNamesWithDATEColumn")]
        public virtual IQueryable<fn_GetTableNamesWithDATEColumn_Result> fn_GetTableNamesWithDATEColumn()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetTableNamesWithDATEColumn_Result>("[GlobalDBEntities].[fn_GetTableNamesWithDATEColumn]()");
        }
    
        [DbFunction("GlobalDBEntities", "fn_GetTableNamesWithLASTMODIFIEDColumn")]
        public virtual IQueryable<fn_GetTableNamesWithLASTMODIFIEDColumn_Result> fn_GetTableNamesWithLASTMODIFIEDColumn()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetTableNamesWithLASTMODIFIEDColumn_Result>("[GlobalDBEntities].[fn_GetTableNamesWithLASTMODIFIEDColumn]()");
        }
    
        [DbFunction("GlobalDBEntities", "fn_Split")]
        public virtual IQueryable<fn_Split_Result> fn_Split(string delimiter, string text, Nullable<short> exclude_empty_row)
        {
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var exclude_empty_rowParameter = exclude_empty_row.HasValue ?
                new ObjectParameter("exclude_empty_row", exclude_empty_row) :
                new ObjectParameter("exclude_empty_row", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_Split_Result>("[GlobalDBEntities].[fn_Split](@delimiter, @text, @exclude_empty_row)", delimiterParameter, textParameter, exclude_empty_rowParameter);
        }
    
        [DbFunction("GlobalDBEntities", "fn_SplitIn2Columns")]
        public virtual IQueryable<fn_SplitIn2Columns_Result> fn_SplitIn2Columns(string delimiter, string text)
        {
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SplitIn2Columns_Result>("[GlobalDBEntities].[fn_SplitIn2Columns](@delimiter, @text)", delimiterParameter, textParameter);
        }
    
        public virtual int MONTLYCALCFOR_WEB(Nullable<System.DateTime> sTINTERVAL, Nullable<System.DateTime> eNDINTERVAL)
        {
            var sTINTERVALParameter = sTINTERVAL.HasValue ?
                new ObjectParameter("STINTERVAL", sTINTERVAL) :
                new ObjectParameter("STINTERVAL", typeof(System.DateTime));
    
            var eNDINTERVALParameter = eNDINTERVAL.HasValue ?
                new ObjectParameter("ENDINTERVAL", eNDINTERVAL) :
                new ObjectParameter("ENDINTERVAL", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MONTLYCALCFOR_WEB", sTINTERVALParameter, eNDINTERVALParameter);
        }
    
        public virtual int MONTLYCALCFOR_WEBINDICATION(Nullable<System.DateTime> sTINTERVAL, Nullable<System.DateTime> eNDINTERVAL)
        {
            var sTINTERVALParameter = sTINTERVAL.HasValue ?
                new ObjectParameter("STINTERVAL", sTINTERVAL) :
                new ObjectParameter("STINTERVAL", typeof(System.DateTime));
    
            var eNDINTERVALParameter = eNDINTERVAL.HasValue ?
                new ObjectParameter("ENDINTERVAL", eNDINTERVAL) :
                new ObjectParameter("ENDINTERVAL", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MONTLYCALCFOR_WEBINDICATION", sTINTERVALParameter, eNDINTERVALParameter);
        }
    
        public virtual int sp_Admin_AddBranch(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_AddBranch", table_NameParameter);
        }
    
        public virtual int sp_Admin_AddCalcInterval(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_AddCalcInterval", table_NameParameter);
        }
    
        public virtual int sp_Admin_AddGroup(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_AddGroup", table_NameParameter);
        }
    
        public virtual int sp_Admin_AddSequencesForCurrentBranch(Nullable<int> branchID, string table_Name, string sequence_Name)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var sequence_NameParameter = sequence_Name != null ?
                new ObjectParameter("Sequence_Name", sequence_Name) :
                new ObjectParameter("Sequence_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_AddSequencesForCurrentBranch", branchIDParameter, table_NameParameter, sequence_NameParameter);
        }
    
        public virtual int sp_Admin_AddUser(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_AddUser", table_NameParameter);
        }
    
        public virtual int sp_Admin_ChangeBranchPeriod()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_ChangeBranchPeriod");
        }
    
        public virtual int sp_Admin_ChangeGroupForSpecifiedUser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_ChangeGroupForSpecifiedUser");
        }
    
        public virtual int sp_Admin_DeleteBranch(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_DeleteBranch", table_NameParameter);
        }
    
        public virtual int sp_Admin_DeleteGroup(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_DeleteGroup", table_NameParameter);
        }
    
        public virtual int sp_Admin_DeleteUser(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_DeleteUser", table_NameParameter);
        }
    
        public virtual int sp_Admin_Export_CallСenter(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_Export_CallСenter", table_NameParameter);
        }
    
        public virtual int sp_Admin_Export_MobiToWeb(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_Export_MobiToWeb", table_NameParameter);
        }
    
        public virtual int sp_Admin_Export_MobiToWeb_Counter(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_Export_MobiToWeb_Counter", table_NameParameter);
        }
    
        public virtual int sp_Admin_Export_MobiToWeb_Payment(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_Export_MobiToWeb_Payment", table_NameParameter);
        }
    
        public virtual int sp_Admin_Export_WWWArmWaterAM(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_Export_WWWArmWaterAM", table_NameParameter);
        }
    
        public virtual int sp_Admin_ExportChangedData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_ExportChangedData");
        }
    
        public virtual int sp_Admin_ExportConsBalance()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_ExportConsBalance");
        }
    
        public virtual int sp_Admin_ExportInvoice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_ExportInvoice");
        }
    
        public virtual int sp_Admin_GenerateCreationScripts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GenerateCreationScripts");
        }
    
        public virtual int sp_Admin_GenerateDataForSpecifiedTable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GenerateDataForSpecifiedTable");
        }
    
        public virtual int sp_Admin_GetAllBankAccountInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GetAllBankAccountInfo");
        }
    
        public virtual int sp_Admin_GetAllBankAccountInfoForCurrentBranch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GetAllBankAccountInfoForCurrentBranch");
        }
    
        public virtual int sp_Admin_GetAllBranchesWithIntervals(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GetAllBranchesWithIntervals", table_NameParameter);
        }
    
        public virtual int sp_Admin_GetAllChildAndParentBranchesForSpecifiedBranch(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GetAllChildAndParentBranchesForSpecifiedBranch", table_NameParameter);
        }
    
        public virtual int sp_Admin_GetAllChildBranchsForCurrentUser(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GetAllChildBranchsForCurrentUser", table_NameParameter);
        }
    
        public virtual int sp_Admin_GetAllChildBranchsForCurrentUserAndGlobalProperty(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GetAllChildBranchsForCurrentUserAndGlobalProperty", table_NameParameter);
        }
    
        public virtual int sp_Admin_GetAllChildBranchUsersForCurrentUser(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GetAllChildBranchUsersForCurrentUser", table_NameParameter);
        }
    
        public virtual int sp_Admin_GetAllGroups(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GetAllGroups", table_NameParameter);
        }
    
        public virtual int sp_Admin_GetAllInfoForCurrentBranch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GetAllInfoForCurrentBranch");
        }
    
        public virtual int sp_Admin_GetAllInfoForCurrentInterval()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GetAllInfoForCurrentInterval");
        }
    
        public virtual int sp_Admin_GetAllLastSubBranches()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GetAllLastSubBranches");
        }
    
        public virtual int sp_Admin_GetAllLibValues_Admin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GetAllLibValues_Admin");
        }
    
        public virtual int sp_Admin_GetAllTerritoriesForSpecifiedBranch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GetAllTerritoriesForSpecifiedBranch");
        }
    
        public virtual int sp_Admin_GetCurrentBranchInfoFromGlobalProperty()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GetCurrentBranchInfoFromGlobalProperty");
        }
    
        public virtual int sp_Admin_GetCurrentCalcIntervalInfoFromGlobalProperty()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GetCurrentCalcIntervalInfoFromGlobalProperty");
        }
    
        public virtual int sp_Admin_GetImportingChangesTableList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GetImportingChangesTableList");
        }
    
        public virtual int sp_Admin_GetSQLQueries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_GetSQLQueries");
        }
    
        public virtual int sp_Admin_ImportInvoice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_ImportInvoice");
        }
    
        public virtual int sp_Admin_ImportPayment(Nullable<int> branch_ID, Nullable<short> iMPORTED)
        {
            var branch_IDParameter = branch_ID.HasValue ?
                new ObjectParameter("Branch_ID", branch_ID) :
                new ObjectParameter("Branch_ID", typeof(int));
    
            var iMPORTEDParameter = iMPORTED.HasValue ?
                new ObjectParameter("IMPORTED", iMPORTED) :
                new ObjectParameter("IMPORTED", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_ImportPayment", branch_IDParameter, iMPORTEDParameter);
        }
    
        public virtual int sp_Admin_ImportPaymentIntoExcel(Nullable<int> branch_ID)
        {
            var branch_IDParameter = branch_ID.HasValue ?
                new ObjectParameter("Branch_ID", branch_ID) :
                new ObjectParameter("Branch_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_ImportPaymentIntoExcel", branch_IDParameter);
        }
    
        public virtual int sp_Admin_LibInfo_Global_Add(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_LibInfo_Global_Add", table_NameParameter);
        }
    
        public virtual int sp_Admin_LibInfo_Global_Delete(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_LibInfo_Global_Delete", table_NameParameter);
        }
    
        public virtual int sp_Admin_LibInfo_Global_Destroy(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_LibInfo_Global_Destroy", table_NameParameter);
        }
    
        public virtual int sp_Admin_LibInfo_Global_Update(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_LibInfo_Global_Update", table_NameParameter);
        }
    
        public virtual int sp_Admin_MergeChangedData(Nullable<int> branch_Id, string table_Name)
        {
            var branch_IdParameter = branch_Id.HasValue ?
                new ObjectParameter("Branch_Id", branch_Id) :
                new ObjectParameter("Branch_Id", typeof(int));
    
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_MergeChangedData", branch_IdParameter, table_NameParameter);
        }
    
        public virtual int sp_Admin_ModifyGroup(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_ModifyGroup", table_NameParameter);
        }
    
        public virtual int sp_Admin_ModifyUser(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_ModifyUser", table_NameParameter);
        }
    
        public virtual int sp_Admin_MoveConsumers(Nullable<int> branch_ID)
        {
            var branch_IDParameter = branch_ID.HasValue ?
                new ObjectParameter("Branch_ID", branch_ID) :
                new ObjectParameter("Branch_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_MoveConsumers", branch_IDParameter);
        }
    
        public virtual int sp_Admin_Stat_CalculateUsedIDsByBranches()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_Stat_CalculateUsedIDsByBranches");
        }
    
        public virtual int sp_Admin_Stat_Fill_BS_TABLE_SEQUENCES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_Stat_Fill_BS_TABLE_SEQUENCES");
        }
    
        public virtual int sp_Admin_Stat_GetMinMaxOfCustomerTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_Stat_GetMinMaxOfCustomerTables");
        }
    
        public virtual int sp_Admin_Stat_ModifySequenceCurrentValueForCurrentBranch(Nullable<int> branchID, string table_Name, Nullable<int> curent_Value)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var curent_ValueParameter = curent_Value.HasValue ?
                new ObjectParameter("Curent_Value", curent_Value) :
                new ObjectParameter("Curent_Value", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_Stat_ModifySequenceCurrentValueForCurrentBranch", branchIDParameter, table_NameParameter, curent_ValueParameter);
        }
    
        public virtual int sp_Admin_SubSP_GetAllTablesList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_SubSP_GetAllTablesList");
        }
    
        public virtual int sp_Admin_SubSP_GetSPsCreationScripts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_SubSP_GetSPsCreationScripts");
        }
    
        public virtual int sp_Admin_SubSP_GetTablesCreationScripts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_SubSP_GetTablesCreationScripts");
        }
    
        public virtual int sp_Admin_SubSP_GetUserTypesCreationScripts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_SubSP_GetUserTypesCreationScripts");
        }
    
        public virtual int sp_Client_AddBillingCycleRoute(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_AddBillingCycleRoute", table_NameParameter);
        }
    
        public virtual int sp_Client_AddBillingCycleVisit(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_AddBillingCycleVisit", table_NameParameter);
        }
    
        public virtual int sp_Client_AddBillingMap(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_AddBillingMap", table_NameParameter);
        }
    
        public virtual int sp_Client_AddCounter(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_AddCounter", table_NameParameter);
        }
    
        public virtual int sp_Client_AddCounterIndication(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_AddCounterIndication", table_NameParameter);
        }
    
        public virtual int sp_Client_AddDebtSchedule(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_AddDebtSchedule", table_NameParameter);
        }
    
        public virtual int sp_Client_AddDrainage(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_AddDrainage", table_NameParameter);
        }
    
        public virtual int sp_Client_AddPayment(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_AddPayment", table_NameParameter);
        }
    
        public virtual int sp_Client_AddStatement(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_AddStatement", table_NameParameter);
        }
    
        public virtual int sp_Client_AddTerritory(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_AddTerritory", table_NameParameter);
        }
    
        public virtual int sp_Client_CalcLoss(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_CalcLoss", table_NameParameter);
        }
    
        public virtual int sp_Client_Calculation(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_Calculation", table_NameParameter);
        }
    
        public virtual int sp_Client_CalculationBasedOnObjectChanges(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_CalculationBasedOnObjectChanges", table_NameParameter);
        }
    
        public virtual int sp_Client_Change_FieldHistory(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_Change_FieldHistory", table_NameParameter);
        }
    
        public virtual int sp_Client_ChangeCounter(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_ChangeCounter", table_NameParameter);
        }
    
        public virtual int sp_Client_ChangeDrainPoints(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_ChangeDrainPoints", table_NameParameter);
        }
    
        public virtual int sp_Client_ChangeIndicationForBillingCycleVisit(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_ChangeIndicationForBillingCycleVisit", table_NameParameter);
        }
    
        public virtual int sp_Client_ChangeSubscriber(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_ChangeSubscriber", table_NameParameter);
        }
    
        public virtual int sp_Client_ChangeWaterPoints(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_ChangeWaterPoints", table_NameParameter);
        }
    
        public virtual int sp_Client_Delete_FieldHistory(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_Delete_FieldHistory", table_NameParameter);
        }
    
        public virtual int sp_Client_DestroyCounter(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_DestroyCounter", table_NameParameter);
        }
    
        public virtual int sp_Client_GetAllConsumersWithWaterContractsForSpecifiedBranch(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetAllConsumersWithWaterContractsForSpecifiedBranch", table_NameParameter);
        }
    
        public virtual int sp_Client_GetAllCountersForCurrentSupplyNode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetAllCountersForCurrentSupplyNode");
        }
    
        public virtual int sp_Client_GetAllQueryBuilder(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetAllQueryBuilder", table_NameParameter);
        }
    
        public virtual int sp_Client_GetAllSupplyNodesForCurrentBranch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetAllSupplyNodesForCurrentBranch");
        }
    
        public virtual int sp_Client_GetAllTableNamesAndColumnsForReCalculationOfChangedCalculatedField(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetAllTableNamesAndColumnsForReCalculationOfChangedCalculatedField", table_NameParameter);
        }
    
        public virtual int sp_Client_GetAllTableNamesForReCalculationOfChangedCalculatedField(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetAllTableNamesForReCalculationOfChangedCalculatedField", table_NameParameter);
        }
    
        public virtual int sp_Client_GetAllWaterPointsForCurrentSupplyNode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetAllWaterPointsForCurrentSupplyNode");
        }
    
        public virtual int sp_Client_GetBillingCycleRoutePeriodsForSpecifiedTerritoryOrBillingCycle(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetBillingCycleRoutePeriodsForSpecifiedTerritoryOrBillingCycle", table_NameParameter);
        }
    
        public virtual int sp_Client_GetBillingCycleRoutesForSpecifiedTerritoryOrBillingCycle(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetBillingCycleRoutesForSpecifiedTerritoryOrBillingCycle", table_NameParameter);
        }
    
        public virtual int sp_Client_GetBillingCycleVisitsForSearching(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetBillingCycleVisitsForSearching", table_NameParameter);
        }
    
        public virtual int sp_Client_GetBillingCycleVisitsForSpecifiedBillinCycleRoute(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetBillingCycleVisitsForSpecifiedBillinCycleRoute", table_NameParameter);
        }
    
        public virtual int sp_Client_GetBillingCycleVisitsForSpecifiedContract(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetBillingCycleVisitsForSpecifiedContract", table_NameParameter);
        }
    
        public virtual int sp_Client_GetBillingMapsForSpecifiedIndicationMap(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetBillingMapsForSpecifiedIndicationMap", table_NameParameter);
        }
    
        public virtual int sp_Client_GetBranchesByDetalization(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetBranchesByDetalization", table_NameParameter);
        }
    
        public virtual int sp_Client_GetCalculation(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetCalculation", table_NameParameter);
        }
    
        public virtual int sp_Client_GetChanges(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetChanges", table_NameParameter);
        }
    
        public virtual int sp_Client_GetCountersForSpecifiedContract(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetCountersForSpecifiedContract", table_NameParameter);
        }
    
        public virtual int sp_Client_GetCountOfPointsAndCountersForSpecifiedConsumer(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetCountOfPointsAndCountersForSpecifiedConsumer", table_NameParameter);
        }
    
        public virtual int sp_Client_GetHistory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetHistory");
        }
    
        public virtual int sp_Client_GetIndicationsForSpecifiedCounters(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetIndicationsForSpecifiedCounters", table_NameParameter);
        }
    
        public virtual int sp_Client_GetIndicationsForSpecifiedSupplyNode(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetIndicationsForSpecifiedSupplyNode", table_NameParameter);
        }
    
        public virtual int sp_Client_GetIndicationsForSpecifiedWaterPoint(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetIndicationsForSpecifiedWaterPoint", table_NameParameter);
        }
    
        public virtual int sp_Client_GetInfoOfBrachesTerritoriesForTree(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetInfoOfBrachesTerritoriesForTree", table_NameParameter);
        }
    
        public virtual int sp_Client_GetRelationLibInfo(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetRelationLibInfo", table_NameParameter);
        }
    
        public virtual int sp_Client_GetStatementsForSpecifiedContract(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetStatementsForSpecifiedContract", table_NameParameter);
        }
    
        public virtual int sp_Client_GetWaterPointsAndContractsForSpecifiedParentSupplyNodeOfWaterPoint(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_GetWaterPointsAndContractsForSpecifiedParentSupplyNodeOfWaterPoint", table_NameParameter);
        }
    
        public virtual int sp_Client_Grid_Global_Get(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_Grid_Global_Get", table_NameParameter);
        }
    
        public virtual int sp_Client_History_GetCountOfChangedColumns(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_History_GetCountOfChangedColumns", table_NameParameter);
        }
    
        public virtual int sp_Client_History_GetCountOfChangedObject(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_History_GetCountOfChangedObject", table_NameParameter);
        }
    
        public virtual int sp_Client_HistoryModification()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_HistoryModification");
        }
    
        public virtual int sp_Client_ImportConsumerTelephoneNumbers(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_ImportConsumerTelephoneNumbers", table_NameParameter);
        }
    
        public virtual int sp_Client_ImportDebtRecomputation(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_ImportDebtRecomputation", table_NameParameter);
        }
    
        public virtual int sp_Client_ImportIndications(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_ImportIndications", table_NameParameter);
        }
    
        public virtual int sp_Client_ImportOldDebtRecomputation(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_ImportOldDebtRecomputation", table_NameParameter);
        }
    
        public virtual int sp_Client_ImportStatement(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_ImportStatement", table_NameParameter);
        }
    
        public virtual int sp_Client_RebuildBillingCycleRoute(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_RebuildBillingCycleRoute", table_NameParameter);
        }
    
        public virtual int sp_Client_RebuildBillingMap(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_RebuildBillingMap", table_NameParameter);
        }
    
        public virtual int sp_Client_ResetCalcMethodsWithWaterContractsForSpecifiedBranch(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Client_ResetCalcMethodsWithWaterContractsForSpecifiedBranch", table_NameParameter);
        }
    
        public virtual int sp_Convert_ConvertToUnicodeNew()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Convert_ConvertToUnicodeNew");
        }
    
        public virtual int sp_Convert_PostProcess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Convert_PostProcess");
        }
    
        public virtual int sp_Global_Add(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_Add", table_NameParameter);
        }
    
        public virtual int sp_Global_Calculation_For_SQLJob(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_Calculation_For_SQLJob", table_NameParameter);
        }
    
        public virtual int sp_Global_Delete(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_Delete", table_NameParameter);
        }
    
        public virtual int sp_Global_DeleteEntity(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_DeleteEntity", table_NameParameter);
        }
    
        public virtual int sp_Global_DestroyEntity(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_DestroyEntity", table_NameParameter);
        }
    
        public virtual int sp_Global_Execute()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_Execute");
        }
    
        public virtual int sp_Global_Get(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_Get", table_NameParameter);
        }
    
        public virtual int sp_Global_GetAllChildBranchsForCurrentBranch(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_GetAllChildBranchsForCurrentBranch", table_NameParameter);
        }
    
        public virtual int sp_Global_GetBranchLogoes(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_GetBranchLogoes", table_NameParameter);
        }
    
        public virtual int sp_Global_GetCurrentDatetime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_GetCurrentDatetime");
        }
    
        public virtual int sp_Global_GetNewSequenceIDForCurrentBranchAndTableName(Nullable<int> branchID, string table_Name)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_GetNewSequenceIDForCurrentBranchAndTableName", branchIDParameter, table_NameParameter);
        }
    
        public virtual int sp_Global_GetObjectIDRangesForHierarchicBranchs(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_GetObjectIDRangesForHierarchicBranchs", table_NameParameter);
        }
    
        public virtual int sp_Global_GetTableNamesForSequences(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_GetTableNamesForSequences", table_NameParameter);
        }
    
        public virtual int sp_Global_GetTableNamesWithClientTypeByCustomerForSequences(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_GetTableNamesWithClientTypeByCustomerForSequences", table_NameParameter);
        }
    
        public virtual int sp_Global_GetTableNamesWithDATEColumn(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_GetTableNamesWithDATEColumn", table_NameParameter);
        }
    
        public virtual int sp_Global_LibValue()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_LibValue");
        }
    
        public virtual int sp_Global_LibValue_Client(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_LibValue_Client", table_NameParameter);
        }
    
        public virtual int sp_Global_LibValue_Const()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_LibValue_Const");
        }
    
        public virtual int sp_Global_LibValue_Relation_Types()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_LibValue_Relation_Types");
        }
    
        public virtual int sp_Global_Login()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_Login");
        }
    
        public virtual int sp_Global_Rebuild_Reorgonize_ALL_Indexes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_Rebuild_Reorgonize_ALL_Indexes");
        }
    
        public virtual int sp_Global_RestoreEntity(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_RestoreEntity", table_NameParameter);
        }
    
        public virtual int sp_Global_Service_Delete(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_Service_Delete", table_NameParameter);
        }
    
        public virtual int sp_Global_Service_Registration(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_Service_Registration", table_NameParameter);
        }
    
        public virtual int sp_Global_SPProcess_Kill(string sP_NAME, Nullable<int> sP_SPID, Nullable<int> run_Kill)
        {
            var sP_NAMEParameter = sP_NAME != null ?
                new ObjectParameter("SP_NAME", sP_NAME) :
                new ObjectParameter("SP_NAME", typeof(string));
    
            var sP_SPIDParameter = sP_SPID.HasValue ?
                new ObjectParameter("SP_SPID", sP_SPID) :
                new ObjectParameter("SP_SPID", typeof(int));
    
            var run_KillParameter = run_Kill.HasValue ?
                new ObjectParameter("Run_Kill", run_Kill) :
                new ObjectParameter("Run_Kill", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SPProcess_Kill", sP_NAMEParameter, sP_SPIDParameter, run_KillParameter);
        }
    
        public virtual int sp_Global_SPProcess_Registration(string sP_NAME, Nullable<int> sP_SPID)
        {
            var sP_NAMEParameter = sP_NAME != null ?
                new ObjectParameter("SP_NAME", sP_NAME) :
                new ObjectParameter("SP_NAME", typeof(string));
    
            var sP_SPIDParameter = sP_SPID.HasValue ?
                new ObjectParameter("SP_SPID", sP_SPID) :
                new ObjectParameter("SP_SPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SPProcess_Registration", sP_NAMEParameter, sP_SPIDParameter);
        }
    
        public virtual int sp_Global_SPProcessDetailInfo_Add(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SPProcessDetailInfo_Add", table_NameParameter);
        }
    
        public virtual int sp_Global_SPProcessDetailInfo_Delete(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SPProcessDetailInfo_Delete", table_NameParameter);
        }
    
        public virtual int sp_Global_SubSP_AddDataForNewYearIn_BS_INFO(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_AddDataForNewYearIn_BS_INFO", table_NameParameter);
        }
    
        public virtual int sp_Global_SubSP_AddDataForNewYearIn_BS_INFO_SUB(Nullable<int> currentYear, string prefixColumnName, Nullable<int> textID, string table_Name)
        {
            var currentYearParameter = currentYear.HasValue ?
                new ObjectParameter("CurrentYear", currentYear) :
                new ObjectParameter("CurrentYear", typeof(int));
    
            var prefixColumnNameParameter = prefixColumnName != null ?
                new ObjectParameter("PrefixColumnName", prefixColumnName) :
                new ObjectParameter("PrefixColumnName", typeof(string));
    
            var textIDParameter = textID.HasValue ?
                new ObjectParameter("TextID", textID) :
                new ObjectParameter("TextID", typeof(int));
    
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_AddDataForNewYearIn_BS_INFO_SUB", currentYearParameter, prefixColumnNameParameter, textIDParameter, table_NameParameter);
        }
    
        public virtual int sp_Global_SubSP_Calc_CalcOrganization(Nullable<int> calcIntv, Nullable<short> calcAll, Nullable<short> oldDebtCharge, Nullable<short> calcLev, Nullable<int> branch, Nullable<short> norm_APPLYPENALTY, Nullable<double> norm_MAXPENALTY, Nullable<double> norm_RESDEFAULT, Nullable<double> norm_SQUAREDEFAULT, Nullable<double> norm_WATERSPEED, Nullable<double> norm_YARDTAPDEFAULT, Nullable<double> norm_MAXBUILDINGTUBEGOODS, Nullable<double> norm_MAXPRIVATETUBEGOODS, Nullable<double> norm_GARDENSQUAREDEFAULT, ObjectParameter recCount)
        {
            var calcIntvParameter = calcIntv.HasValue ?
                new ObjectParameter("CalcIntv", calcIntv) :
                new ObjectParameter("CalcIntv", typeof(int));
    
            var calcAllParameter = calcAll.HasValue ?
                new ObjectParameter("CalcAll", calcAll) :
                new ObjectParameter("CalcAll", typeof(short));
    
            var oldDebtChargeParameter = oldDebtCharge.HasValue ?
                new ObjectParameter("OldDebtCharge", oldDebtCharge) :
                new ObjectParameter("OldDebtCharge", typeof(short));
    
            var calcLevParameter = calcLev.HasValue ?
                new ObjectParameter("CalcLev", calcLev) :
                new ObjectParameter("CalcLev", typeof(short));
    
            var branchParameter = branch.HasValue ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(int));
    
            var norm_APPLYPENALTYParameter = norm_APPLYPENALTY.HasValue ?
                new ObjectParameter("Norm_APPLYPENALTY", norm_APPLYPENALTY) :
                new ObjectParameter("Norm_APPLYPENALTY", typeof(short));
    
            var norm_MAXPENALTYParameter = norm_MAXPENALTY.HasValue ?
                new ObjectParameter("Norm_MAXPENALTY", norm_MAXPENALTY) :
                new ObjectParameter("Norm_MAXPENALTY", typeof(double));
    
            var norm_RESDEFAULTParameter = norm_RESDEFAULT.HasValue ?
                new ObjectParameter("Norm_RESDEFAULT", norm_RESDEFAULT) :
                new ObjectParameter("Norm_RESDEFAULT", typeof(double));
    
            var norm_SQUAREDEFAULTParameter = norm_SQUAREDEFAULT.HasValue ?
                new ObjectParameter("Norm_SQUAREDEFAULT", norm_SQUAREDEFAULT) :
                new ObjectParameter("Norm_SQUAREDEFAULT", typeof(double));
    
            var norm_WATERSPEEDParameter = norm_WATERSPEED.HasValue ?
                new ObjectParameter("Norm_WATERSPEED", norm_WATERSPEED) :
                new ObjectParameter("Norm_WATERSPEED", typeof(double));
    
            var norm_YARDTAPDEFAULTParameter = norm_YARDTAPDEFAULT.HasValue ?
                new ObjectParameter("Norm_YARDTAPDEFAULT", norm_YARDTAPDEFAULT) :
                new ObjectParameter("Norm_YARDTAPDEFAULT", typeof(double));
    
            var norm_MAXBUILDINGTUBEGOODSParameter = norm_MAXBUILDINGTUBEGOODS.HasValue ?
                new ObjectParameter("Norm_MAXBUILDINGTUBEGOODS", norm_MAXBUILDINGTUBEGOODS) :
                new ObjectParameter("Norm_MAXBUILDINGTUBEGOODS", typeof(double));
    
            var norm_MAXPRIVATETUBEGOODSParameter = norm_MAXPRIVATETUBEGOODS.HasValue ?
                new ObjectParameter("Norm_MAXPRIVATETUBEGOODS", norm_MAXPRIVATETUBEGOODS) :
                new ObjectParameter("Norm_MAXPRIVATETUBEGOODS", typeof(double));
    
            var norm_GARDENSQUAREDEFAULTParameter = norm_GARDENSQUAREDEFAULT.HasValue ?
                new ObjectParameter("Norm_GARDENSQUAREDEFAULT", norm_GARDENSQUAREDEFAULT) :
                new ObjectParameter("Norm_GARDENSQUAREDEFAULT", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_Calc_CalcOrganization", calcIntvParameter, calcAllParameter, oldDebtChargeParameter, calcLevParameter, branchParameter, norm_APPLYPENALTYParameter, norm_MAXPENALTYParameter, norm_RESDEFAULTParameter, norm_SQUAREDEFAULTParameter, norm_WATERSPEEDParameter, norm_YARDTAPDEFAULTParameter, norm_MAXBUILDINGTUBEGOODSParameter, norm_MAXPRIVATETUBEGOODSParameter, norm_GARDENSQUAREDEFAULTParameter, recCount);
        }
    
        public virtual int sp_Global_SubSP_Calc_CalcResident(Nullable<int> calcIntv, Nullable<short> calcAll, Nullable<short> oldDebtCharge, Nullable<short> calcLev, Nullable<int> branch, Nullable<short> norm_APPLYPENALTY, Nullable<double> norm_MAXPENALTY, Nullable<double> norm_RESDEFAULT, Nullable<double> norm_SQUAREDEFAULT, Nullable<double> norm_WATERSPEED, Nullable<double> norm_YARDTAPDEFAULT, Nullable<double> norm_MAXBUILDINGTUBEGOODS, Nullable<double> norm_MAXPRIVATETUBEGOODS, Nullable<double> norm_GARDENSQUAREDEFAULT, ObjectParameter recCount)
        {
            var calcIntvParameter = calcIntv.HasValue ?
                new ObjectParameter("CalcIntv", calcIntv) :
                new ObjectParameter("CalcIntv", typeof(int));
    
            var calcAllParameter = calcAll.HasValue ?
                new ObjectParameter("CalcAll", calcAll) :
                new ObjectParameter("CalcAll", typeof(short));
    
            var oldDebtChargeParameter = oldDebtCharge.HasValue ?
                new ObjectParameter("OldDebtCharge", oldDebtCharge) :
                new ObjectParameter("OldDebtCharge", typeof(short));
    
            var calcLevParameter = calcLev.HasValue ?
                new ObjectParameter("CalcLev", calcLev) :
                new ObjectParameter("CalcLev", typeof(short));
    
            var branchParameter = branch.HasValue ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(int));
    
            var norm_APPLYPENALTYParameter = norm_APPLYPENALTY.HasValue ?
                new ObjectParameter("Norm_APPLYPENALTY", norm_APPLYPENALTY) :
                new ObjectParameter("Norm_APPLYPENALTY", typeof(short));
    
            var norm_MAXPENALTYParameter = norm_MAXPENALTY.HasValue ?
                new ObjectParameter("Norm_MAXPENALTY", norm_MAXPENALTY) :
                new ObjectParameter("Norm_MAXPENALTY", typeof(double));
    
            var norm_RESDEFAULTParameter = norm_RESDEFAULT.HasValue ?
                new ObjectParameter("Norm_RESDEFAULT", norm_RESDEFAULT) :
                new ObjectParameter("Norm_RESDEFAULT", typeof(double));
    
            var norm_SQUAREDEFAULTParameter = norm_SQUAREDEFAULT.HasValue ?
                new ObjectParameter("Norm_SQUAREDEFAULT", norm_SQUAREDEFAULT) :
                new ObjectParameter("Norm_SQUAREDEFAULT", typeof(double));
    
            var norm_WATERSPEEDParameter = norm_WATERSPEED.HasValue ?
                new ObjectParameter("Norm_WATERSPEED", norm_WATERSPEED) :
                new ObjectParameter("Norm_WATERSPEED", typeof(double));
    
            var norm_YARDTAPDEFAULTParameter = norm_YARDTAPDEFAULT.HasValue ?
                new ObjectParameter("Norm_YARDTAPDEFAULT", norm_YARDTAPDEFAULT) :
                new ObjectParameter("Norm_YARDTAPDEFAULT", typeof(double));
    
            var norm_MAXBUILDINGTUBEGOODSParameter = norm_MAXBUILDINGTUBEGOODS.HasValue ?
                new ObjectParameter("Norm_MAXBUILDINGTUBEGOODS", norm_MAXBUILDINGTUBEGOODS) :
                new ObjectParameter("Norm_MAXBUILDINGTUBEGOODS", typeof(double));
    
            var norm_MAXPRIVATETUBEGOODSParameter = norm_MAXPRIVATETUBEGOODS.HasValue ?
                new ObjectParameter("Norm_MAXPRIVATETUBEGOODS", norm_MAXPRIVATETUBEGOODS) :
                new ObjectParameter("Norm_MAXPRIVATETUBEGOODS", typeof(double));
    
            var norm_GARDENSQUAREDEFAULTParameter = norm_GARDENSQUAREDEFAULT.HasValue ?
                new ObjectParameter("Norm_GARDENSQUAREDEFAULT", norm_GARDENSQUAREDEFAULT) :
                new ObjectParameter("Norm_GARDENSQUAREDEFAULT", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_Calc_CalcResident", calcIntvParameter, calcAllParameter, oldDebtChargeParameter, calcLevParameter, branchParameter, norm_APPLYPENALTYParameter, norm_MAXPENALTYParameter, norm_RESDEFAULTParameter, norm_SQUAREDEFAULTParameter, norm_WATERSPEEDParameter, norm_YARDTAPDEFAULTParameter, norm_MAXBUILDINGTUBEGOODSParameter, norm_MAXPRIVATETUBEGOODSParameter, norm_GARDENSQUAREDEFAULTParameter, recCount);
        }
    
        public virtual int sp_Global_SubSP_Calc_spr_CalcCntLessGoods(Nullable<int> calcCntLessGoods_Contract, Nullable<int> calcCntLessGoods_Point, Nullable<short> calcCntLessGoods_CalcMethod, Nullable<int> calcCntLessGoods_Branch, Nullable<short> calcCntLessGoods_DaysCount, Nullable<short> calcCntLessGoods_ContractType, Nullable<System.DateTime> calcCntLessGoods_StartDate, Nullable<System.DateTime> calcCntLessGoods_EndDate, Nullable<short> calcCntLessGoods_CalcLev, Nullable<short> calcCntLessGoods_HasCounter, Nullable<short> calcCntLessGoods_HouseKind, Nullable<double> calcCntLessGoods_Norm_RESDEFAULT, Nullable<double> calcCntLessGoods_Norm_SQUAREDEFAULT, Nullable<double> calcCntLessGoods_Norm_WATERSPEED, Nullable<double> calcCntLessGoods_Norm_YARDTAPDEFAULT, Nullable<double> calcCntLessGoods_Norm_MAXBUILDINGTUBEGOODS, Nullable<double> calcCntLessGoods_Norm_MAXPRIVATETUBEGOODS, Nullable<double> calcCntLessGoods_Norm_GARDENSQUAREDEFAULT, ObjectParameter calcCntLessGoods_WaterClcGoods, ObjectParameter calcCntLessGoods_HasCmResCount, ObjectParameter calcCntLessGoods_HasCmSquare, ObjectParameter calcCntLessGoods_HasCmDefault, ObjectParameter calcCntLessGoods_HasCmTubSpeedTime, ObjectParameter calcCntLessGoods_HasCmGardSquare, ObjectParameter calcCntLessGoods_HasCmYardTap)
        {
            var calcCntLessGoods_ContractParameter = calcCntLessGoods_Contract.HasValue ?
                new ObjectParameter("CalcCntLessGoods_Contract", calcCntLessGoods_Contract) :
                new ObjectParameter("CalcCntLessGoods_Contract", typeof(int));
    
            var calcCntLessGoods_PointParameter = calcCntLessGoods_Point.HasValue ?
                new ObjectParameter("CalcCntLessGoods_Point", calcCntLessGoods_Point) :
                new ObjectParameter("CalcCntLessGoods_Point", typeof(int));
    
            var calcCntLessGoods_CalcMethodParameter = calcCntLessGoods_CalcMethod.HasValue ?
                new ObjectParameter("CalcCntLessGoods_CalcMethod", calcCntLessGoods_CalcMethod) :
                new ObjectParameter("CalcCntLessGoods_CalcMethod", typeof(short));
    
            var calcCntLessGoods_BranchParameter = calcCntLessGoods_Branch.HasValue ?
                new ObjectParameter("CalcCntLessGoods_Branch", calcCntLessGoods_Branch) :
                new ObjectParameter("CalcCntLessGoods_Branch", typeof(int));
    
            var calcCntLessGoods_DaysCountParameter = calcCntLessGoods_DaysCount.HasValue ?
                new ObjectParameter("CalcCntLessGoods_DaysCount", calcCntLessGoods_DaysCount) :
                new ObjectParameter("CalcCntLessGoods_DaysCount", typeof(short));
    
            var calcCntLessGoods_ContractTypeParameter = calcCntLessGoods_ContractType.HasValue ?
                new ObjectParameter("CalcCntLessGoods_ContractType", calcCntLessGoods_ContractType) :
                new ObjectParameter("CalcCntLessGoods_ContractType", typeof(short));
    
            var calcCntLessGoods_StartDateParameter = calcCntLessGoods_StartDate.HasValue ?
                new ObjectParameter("CalcCntLessGoods_StartDate", calcCntLessGoods_StartDate) :
                new ObjectParameter("CalcCntLessGoods_StartDate", typeof(System.DateTime));
    
            var calcCntLessGoods_EndDateParameter = calcCntLessGoods_EndDate.HasValue ?
                new ObjectParameter("CalcCntLessGoods_EndDate", calcCntLessGoods_EndDate) :
                new ObjectParameter("CalcCntLessGoods_EndDate", typeof(System.DateTime));
    
            var calcCntLessGoods_CalcLevParameter = calcCntLessGoods_CalcLev.HasValue ?
                new ObjectParameter("CalcCntLessGoods_CalcLev", calcCntLessGoods_CalcLev) :
                new ObjectParameter("CalcCntLessGoods_CalcLev", typeof(short));
    
            var calcCntLessGoods_HasCounterParameter = calcCntLessGoods_HasCounter.HasValue ?
                new ObjectParameter("CalcCntLessGoods_HasCounter", calcCntLessGoods_HasCounter) :
                new ObjectParameter("CalcCntLessGoods_HasCounter", typeof(short));
    
            var calcCntLessGoods_HouseKindParameter = calcCntLessGoods_HouseKind.HasValue ?
                new ObjectParameter("CalcCntLessGoods_HouseKind", calcCntLessGoods_HouseKind) :
                new ObjectParameter("CalcCntLessGoods_HouseKind", typeof(short));
    
            var calcCntLessGoods_Norm_RESDEFAULTParameter = calcCntLessGoods_Norm_RESDEFAULT.HasValue ?
                new ObjectParameter("CalcCntLessGoods_Norm_RESDEFAULT", calcCntLessGoods_Norm_RESDEFAULT) :
                new ObjectParameter("CalcCntLessGoods_Norm_RESDEFAULT", typeof(double));
    
            var calcCntLessGoods_Norm_SQUAREDEFAULTParameter = calcCntLessGoods_Norm_SQUAREDEFAULT.HasValue ?
                new ObjectParameter("CalcCntLessGoods_Norm_SQUAREDEFAULT", calcCntLessGoods_Norm_SQUAREDEFAULT) :
                new ObjectParameter("CalcCntLessGoods_Norm_SQUAREDEFAULT", typeof(double));
    
            var calcCntLessGoods_Norm_WATERSPEEDParameter = calcCntLessGoods_Norm_WATERSPEED.HasValue ?
                new ObjectParameter("CalcCntLessGoods_Norm_WATERSPEED", calcCntLessGoods_Norm_WATERSPEED) :
                new ObjectParameter("CalcCntLessGoods_Norm_WATERSPEED", typeof(double));
    
            var calcCntLessGoods_Norm_YARDTAPDEFAULTParameter = calcCntLessGoods_Norm_YARDTAPDEFAULT.HasValue ?
                new ObjectParameter("CalcCntLessGoods_Norm_YARDTAPDEFAULT", calcCntLessGoods_Norm_YARDTAPDEFAULT) :
                new ObjectParameter("CalcCntLessGoods_Norm_YARDTAPDEFAULT", typeof(double));
    
            var calcCntLessGoods_Norm_MAXBUILDINGTUBEGOODSParameter = calcCntLessGoods_Norm_MAXBUILDINGTUBEGOODS.HasValue ?
                new ObjectParameter("CalcCntLessGoods_Norm_MAXBUILDINGTUBEGOODS", calcCntLessGoods_Norm_MAXBUILDINGTUBEGOODS) :
                new ObjectParameter("CalcCntLessGoods_Norm_MAXBUILDINGTUBEGOODS", typeof(double));
    
            var calcCntLessGoods_Norm_MAXPRIVATETUBEGOODSParameter = calcCntLessGoods_Norm_MAXPRIVATETUBEGOODS.HasValue ?
                new ObjectParameter("CalcCntLessGoods_Norm_MAXPRIVATETUBEGOODS", calcCntLessGoods_Norm_MAXPRIVATETUBEGOODS) :
                new ObjectParameter("CalcCntLessGoods_Norm_MAXPRIVATETUBEGOODS", typeof(double));
    
            var calcCntLessGoods_Norm_GARDENSQUAREDEFAULTParameter = calcCntLessGoods_Norm_GARDENSQUAREDEFAULT.HasValue ?
                new ObjectParameter("CalcCntLessGoods_Norm_GARDENSQUAREDEFAULT", calcCntLessGoods_Norm_GARDENSQUAREDEFAULT) :
                new ObjectParameter("CalcCntLessGoods_Norm_GARDENSQUAREDEFAULT", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_Calc_spr_CalcCntLessGoods", calcCntLessGoods_ContractParameter, calcCntLessGoods_PointParameter, calcCntLessGoods_CalcMethodParameter, calcCntLessGoods_BranchParameter, calcCntLessGoods_DaysCountParameter, calcCntLessGoods_ContractTypeParameter, calcCntLessGoods_StartDateParameter, calcCntLessGoods_EndDateParameter, calcCntLessGoods_CalcLevParameter, calcCntLessGoods_HasCounterParameter, calcCntLessGoods_HouseKindParameter, calcCntLessGoods_Norm_RESDEFAULTParameter, calcCntLessGoods_Norm_SQUAREDEFAULTParameter, calcCntLessGoods_Norm_WATERSPEEDParameter, calcCntLessGoods_Norm_YARDTAPDEFAULTParameter, calcCntLessGoods_Norm_MAXBUILDINGTUBEGOODSParameter, calcCntLessGoods_Norm_MAXPRIVATETUBEGOODSParameter, calcCntLessGoods_Norm_GARDENSQUAREDEFAULTParameter, calcCntLessGoods_WaterClcGoods, calcCntLessGoods_HasCmResCount, calcCntLessGoods_HasCmSquare, calcCntLessGoods_HasCmDefault, calcCntLessGoods_HasCmTubSpeedTime, calcCntLessGoods_HasCmGardSquare, calcCntLessGoods_HasCmYardTap);
        }
    
        public virtual int sp_Global_SubSP_Calc_spr_CalcDutyStartEnd(Nullable<int> calcDutyStartEnd_Contract, Nullable<decimal> calcDutyStartEnd_WaterClcAmt, Nullable<decimal> calcDutyStartEnd_WaterStmAmt, Nullable<decimal> calcDutyStartEnd_DrainClcAmt, Nullable<decimal> calcDutyStartEnd_DrainStmAmt, Nullable<decimal> calcDutyStartEnd_IrrigClcAmt, Nullable<decimal> calcDutyStartEnd_IrrigStmAmt, Nullable<System.DateTime> calcDutyStartEnd_StartDate, Nullable<System.DateTime> calcDutyStartEnd_EndDate, string calcDutyStartEnd_FSM_ClmnAmnt, ObjectParameter calcDutyStartEnd_DutyEnd, ObjectParameter calcDutyStartEnd_DutyStart, ObjectParameter calcDutyStartEnd_OldDutyEnd, ObjectParameter calcDutyStartEnd_OldDutySt, ObjectParameter calcDutyStartEnd_FsmClear, ObjectParameter calcDutyStartEnd_FsmMove, ObjectParameter calcDutyStartEnd_OldFsmClear, ObjectParameter calcDutyStartEnd_OldFsmMove, ObjectParameter calcDutyStartEnd_Amount, ObjectParameter calcDutyStartEnd_PymCurr, ObjectParameter calcDutyStartEnd_PmCorr, ObjectParameter calcDutyStartEnd_PymDefRegCorr, ObjectParameter calcDutyStartEnd_PymDefRegCurr, ObjectParameter calcDutyStartEnd_PymTransRegCorr, ObjectParameter calcDutyStartEnd_PymTransRegCurr, ObjectParameter calcDutyStartEnd_CustServAmt, ObjectParameter calcDutyStartEnd_DebSched, ObjectParameter calcDutyStartEnd_DebSchedPym, ObjectParameter calcDutyStartEnd_DebtScheduleRemainingDebt, ObjectParameter calcDutyStartEnd_DebtScheduleCurrentPayment, ObjectParameter calcDutyStartEnd_DebtScheduleCompletedate)
        {
            var calcDutyStartEnd_ContractParameter = calcDutyStartEnd_Contract.HasValue ?
                new ObjectParameter("CalcDutyStartEnd_Contract", calcDutyStartEnd_Contract) :
                new ObjectParameter("CalcDutyStartEnd_Contract", typeof(int));
    
            var calcDutyStartEnd_WaterClcAmtParameter = calcDutyStartEnd_WaterClcAmt.HasValue ?
                new ObjectParameter("CalcDutyStartEnd_WaterClcAmt", calcDutyStartEnd_WaterClcAmt) :
                new ObjectParameter("CalcDutyStartEnd_WaterClcAmt", typeof(decimal));
    
            var calcDutyStartEnd_WaterStmAmtParameter = calcDutyStartEnd_WaterStmAmt.HasValue ?
                new ObjectParameter("CalcDutyStartEnd_WaterStmAmt", calcDutyStartEnd_WaterStmAmt) :
                new ObjectParameter("CalcDutyStartEnd_WaterStmAmt", typeof(decimal));
    
            var calcDutyStartEnd_DrainClcAmtParameter = calcDutyStartEnd_DrainClcAmt.HasValue ?
                new ObjectParameter("CalcDutyStartEnd_DrainClcAmt", calcDutyStartEnd_DrainClcAmt) :
                new ObjectParameter("CalcDutyStartEnd_DrainClcAmt", typeof(decimal));
    
            var calcDutyStartEnd_DrainStmAmtParameter = calcDutyStartEnd_DrainStmAmt.HasValue ?
                new ObjectParameter("CalcDutyStartEnd_DrainStmAmt", calcDutyStartEnd_DrainStmAmt) :
                new ObjectParameter("CalcDutyStartEnd_DrainStmAmt", typeof(decimal));
    
            var calcDutyStartEnd_IrrigClcAmtParameter = calcDutyStartEnd_IrrigClcAmt.HasValue ?
                new ObjectParameter("CalcDutyStartEnd_IrrigClcAmt", calcDutyStartEnd_IrrigClcAmt) :
                new ObjectParameter("CalcDutyStartEnd_IrrigClcAmt", typeof(decimal));
    
            var calcDutyStartEnd_IrrigStmAmtParameter = calcDutyStartEnd_IrrigStmAmt.HasValue ?
                new ObjectParameter("CalcDutyStartEnd_IrrigStmAmt", calcDutyStartEnd_IrrigStmAmt) :
                new ObjectParameter("CalcDutyStartEnd_IrrigStmAmt", typeof(decimal));
    
            var calcDutyStartEnd_StartDateParameter = calcDutyStartEnd_StartDate.HasValue ?
                new ObjectParameter("CalcDutyStartEnd_StartDate", calcDutyStartEnd_StartDate) :
                new ObjectParameter("CalcDutyStartEnd_StartDate", typeof(System.DateTime));
    
            var calcDutyStartEnd_EndDateParameter = calcDutyStartEnd_EndDate.HasValue ?
                new ObjectParameter("CalcDutyStartEnd_EndDate", calcDutyStartEnd_EndDate) :
                new ObjectParameter("CalcDutyStartEnd_EndDate", typeof(System.DateTime));
    
            var calcDutyStartEnd_FSM_ClmnAmntParameter = calcDutyStartEnd_FSM_ClmnAmnt != null ?
                new ObjectParameter("CalcDutyStartEnd_FSM_ClmnAmnt", calcDutyStartEnd_FSM_ClmnAmnt) :
                new ObjectParameter("CalcDutyStartEnd_FSM_ClmnAmnt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_Calc_spr_CalcDutyStartEnd", calcDutyStartEnd_ContractParameter, calcDutyStartEnd_WaterClcAmtParameter, calcDutyStartEnd_WaterStmAmtParameter, calcDutyStartEnd_DrainClcAmtParameter, calcDutyStartEnd_DrainStmAmtParameter, calcDutyStartEnd_IrrigClcAmtParameter, calcDutyStartEnd_IrrigStmAmtParameter, calcDutyStartEnd_StartDateParameter, calcDutyStartEnd_EndDateParameter, calcDutyStartEnd_FSM_ClmnAmntParameter, calcDutyStartEnd_DutyEnd, calcDutyStartEnd_DutyStart, calcDutyStartEnd_OldDutyEnd, calcDutyStartEnd_OldDutySt, calcDutyStartEnd_FsmClear, calcDutyStartEnd_FsmMove, calcDutyStartEnd_OldFsmClear, calcDutyStartEnd_OldFsmMove, calcDutyStartEnd_Amount, calcDutyStartEnd_PymCurr, calcDutyStartEnd_PmCorr, calcDutyStartEnd_PymDefRegCorr, calcDutyStartEnd_PymDefRegCurr, calcDutyStartEnd_PymTransRegCorr, calcDutyStartEnd_PymTransRegCurr, calcDutyStartEnd_CustServAmt, calcDutyStartEnd_DebSched, calcDutyStartEnd_DebSchedPym, calcDutyStartEnd_DebtScheduleRemainingDebt, calcDutyStartEnd_DebtScheduleCurrentPayment, calcDutyStartEnd_DebtScheduleCompletedate);
        }
    
        public virtual int sp_Global_SubSP_Calc_spr_CalcGoodsAmt(Nullable<System.DateTime> calcGoodsAmt_StartDate, Nullable<System.DateTime> calcGoodsAmt_EndDate, Nullable<int> calcGoodsAmt_Contract, Nullable<int> calcGoodsAmt_Branch, Nullable<short> calcGoodsAmt_TableType, Nullable<decimal> calcGoodsAmt_Discount, Nullable<short> calcGoodsAmt_CalcLev, Nullable<int> calcGoodsAmt_ResCount, Nullable<short> calcGoodsAmt_HouseKind, Nullable<double> calcGoodsAmt_Norm_RESDEFAULT, Nullable<double> calcGoodsAmt_Norm_SQUAREDEFAULT, Nullable<double> calcGoodsAmt_Norm_WATERSPEED, Nullable<double> calcGoodsAmt_Norm_YARDTAPDEFAULT, Nullable<double> calcGoodsAmt_Norm_MAXBUILDINGTUBEGOODS, Nullable<double> calcGoodsAmt_Norm_MAXPRIVATETUBEGOODS, Nullable<double> calcGoodsAmt_Norm_GARDENSQUAREDEFAULT, ObjectParameter calcGoodsAmt_HASCMDEFAULT, ObjectParameter calcGoodsAmt_HASCMGARDENSQUARE, ObjectParameter calcGoodsAmt_HASCMRESCOUNT, ObjectParameter calcGoodsAmt_HASCMSQUARE, ObjectParameter calcGoodsAmt_HASCMTUBESPEEDTIME, ObjectParameter calcGoodsAmt_HASCMYARDTAP, ObjectParameter calcGoodsAmt_HASCONDOMINIUM, ObjectParameter calcGoodsAmt_HASDISCOUNT, ObjectParameter calcGoodsAmt_HASIRRIGATION, ObjectParameter calcGoodsAmt_HASWATER, ObjectParameter calcGoodsAmt_HASCOUNTER, ObjectParameter calcGoodsAmt_WATERSTMAMOUNT, ObjectParameter calcGoodsAmt_WATERSTMGOODS, ObjectParameter calcGoodsAmt_WATERCLCGOODS, ObjectParameter calcGoodsAmt_WATERCLCAMOUNT, ObjectParameter calcGoodsAmt_IRRIGATIONSTMAMOUNT, ObjectParameter calcGoodsAmt_IRRIGATIONSTMGOODS, ObjectParameter calcGoodsAmt_IRRIGATIONCLCAMOUNT, ObjectParameter calcGoodsAmt_IRRIGATIONCLCGOODS, ObjectParameter calcGoodsAmt_DRAINAGECLCGOODS, ObjectParameter calcGoodsAmt_DrainClcAmt, ObjectParameter calcGoodsAmt_HasDrain, ObjectParameter calcGoodsAmt_DrainStmAmt, ObjectParameter calcGoodsAmt_DrainStmGoods)
        {
            var calcGoodsAmt_StartDateParameter = calcGoodsAmt_StartDate.HasValue ?
                new ObjectParameter("CalcGoodsAmt_StartDate", calcGoodsAmt_StartDate) :
                new ObjectParameter("CalcGoodsAmt_StartDate", typeof(System.DateTime));
    
            var calcGoodsAmt_EndDateParameter = calcGoodsAmt_EndDate.HasValue ?
                new ObjectParameter("CalcGoodsAmt_EndDate", calcGoodsAmt_EndDate) :
                new ObjectParameter("CalcGoodsAmt_EndDate", typeof(System.DateTime));
    
            var calcGoodsAmt_ContractParameter = calcGoodsAmt_Contract.HasValue ?
                new ObjectParameter("CalcGoodsAmt_Contract", calcGoodsAmt_Contract) :
                new ObjectParameter("CalcGoodsAmt_Contract", typeof(int));
    
            var calcGoodsAmt_BranchParameter = calcGoodsAmt_Branch.HasValue ?
                new ObjectParameter("CalcGoodsAmt_Branch", calcGoodsAmt_Branch) :
                new ObjectParameter("CalcGoodsAmt_Branch", typeof(int));
    
            var calcGoodsAmt_TableTypeParameter = calcGoodsAmt_TableType.HasValue ?
                new ObjectParameter("CalcGoodsAmt_TableType", calcGoodsAmt_TableType) :
                new ObjectParameter("CalcGoodsAmt_TableType", typeof(short));
    
            var calcGoodsAmt_DiscountParameter = calcGoodsAmt_Discount.HasValue ?
                new ObjectParameter("CalcGoodsAmt_Discount", calcGoodsAmt_Discount) :
                new ObjectParameter("CalcGoodsAmt_Discount", typeof(decimal));
    
            var calcGoodsAmt_CalcLevParameter = calcGoodsAmt_CalcLev.HasValue ?
                new ObjectParameter("CalcGoodsAmt_CalcLev", calcGoodsAmt_CalcLev) :
                new ObjectParameter("CalcGoodsAmt_CalcLev", typeof(short));
    
            var calcGoodsAmt_ResCountParameter = calcGoodsAmt_ResCount.HasValue ?
                new ObjectParameter("CalcGoodsAmt_ResCount", calcGoodsAmt_ResCount) :
                new ObjectParameter("CalcGoodsAmt_ResCount", typeof(int));
    
            var calcGoodsAmt_HouseKindParameter = calcGoodsAmt_HouseKind.HasValue ?
                new ObjectParameter("CalcGoodsAmt_HouseKind", calcGoodsAmt_HouseKind) :
                new ObjectParameter("CalcGoodsAmt_HouseKind", typeof(short));
    
            var calcGoodsAmt_Norm_RESDEFAULTParameter = calcGoodsAmt_Norm_RESDEFAULT.HasValue ?
                new ObjectParameter("CalcGoodsAmt_Norm_RESDEFAULT", calcGoodsAmt_Norm_RESDEFAULT) :
                new ObjectParameter("CalcGoodsAmt_Norm_RESDEFAULT", typeof(double));
    
            var calcGoodsAmt_Norm_SQUAREDEFAULTParameter = calcGoodsAmt_Norm_SQUAREDEFAULT.HasValue ?
                new ObjectParameter("CalcGoodsAmt_Norm_SQUAREDEFAULT", calcGoodsAmt_Norm_SQUAREDEFAULT) :
                new ObjectParameter("CalcGoodsAmt_Norm_SQUAREDEFAULT", typeof(double));
    
            var calcGoodsAmt_Norm_WATERSPEEDParameter = calcGoodsAmt_Norm_WATERSPEED.HasValue ?
                new ObjectParameter("CalcGoodsAmt_Norm_WATERSPEED", calcGoodsAmt_Norm_WATERSPEED) :
                new ObjectParameter("CalcGoodsAmt_Norm_WATERSPEED", typeof(double));
    
            var calcGoodsAmt_Norm_YARDTAPDEFAULTParameter = calcGoodsAmt_Norm_YARDTAPDEFAULT.HasValue ?
                new ObjectParameter("CalcGoodsAmt_Norm_YARDTAPDEFAULT", calcGoodsAmt_Norm_YARDTAPDEFAULT) :
                new ObjectParameter("CalcGoodsAmt_Norm_YARDTAPDEFAULT", typeof(double));
    
            var calcGoodsAmt_Norm_MAXBUILDINGTUBEGOODSParameter = calcGoodsAmt_Norm_MAXBUILDINGTUBEGOODS.HasValue ?
                new ObjectParameter("CalcGoodsAmt_Norm_MAXBUILDINGTUBEGOODS", calcGoodsAmt_Norm_MAXBUILDINGTUBEGOODS) :
                new ObjectParameter("CalcGoodsAmt_Norm_MAXBUILDINGTUBEGOODS", typeof(double));
    
            var calcGoodsAmt_Norm_MAXPRIVATETUBEGOODSParameter = calcGoodsAmt_Norm_MAXPRIVATETUBEGOODS.HasValue ?
                new ObjectParameter("CalcGoodsAmt_Norm_MAXPRIVATETUBEGOODS", calcGoodsAmt_Norm_MAXPRIVATETUBEGOODS) :
                new ObjectParameter("CalcGoodsAmt_Norm_MAXPRIVATETUBEGOODS", typeof(double));
    
            var calcGoodsAmt_Norm_GARDENSQUAREDEFAULTParameter = calcGoodsAmt_Norm_GARDENSQUAREDEFAULT.HasValue ?
                new ObjectParameter("CalcGoodsAmt_Norm_GARDENSQUAREDEFAULT", calcGoodsAmt_Norm_GARDENSQUAREDEFAULT) :
                new ObjectParameter("CalcGoodsAmt_Norm_GARDENSQUAREDEFAULT", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_Calc_spr_CalcGoodsAmt", calcGoodsAmt_StartDateParameter, calcGoodsAmt_EndDateParameter, calcGoodsAmt_ContractParameter, calcGoodsAmt_BranchParameter, calcGoodsAmt_TableTypeParameter, calcGoodsAmt_DiscountParameter, calcGoodsAmt_CalcLevParameter, calcGoodsAmt_ResCountParameter, calcGoodsAmt_HouseKindParameter, calcGoodsAmt_Norm_RESDEFAULTParameter, calcGoodsAmt_Norm_SQUAREDEFAULTParameter, calcGoodsAmt_Norm_WATERSPEEDParameter, calcGoodsAmt_Norm_YARDTAPDEFAULTParameter, calcGoodsAmt_Norm_MAXBUILDINGTUBEGOODSParameter, calcGoodsAmt_Norm_MAXPRIVATETUBEGOODSParameter, calcGoodsAmt_Norm_GARDENSQUAREDEFAULTParameter, calcGoodsAmt_HASCMDEFAULT, calcGoodsAmt_HASCMGARDENSQUARE, calcGoodsAmt_HASCMRESCOUNT, calcGoodsAmt_HASCMSQUARE, calcGoodsAmt_HASCMTUBESPEEDTIME, calcGoodsAmt_HASCMYARDTAP, calcGoodsAmt_HASCONDOMINIUM, calcGoodsAmt_HASDISCOUNT, calcGoodsAmt_HASIRRIGATION, calcGoodsAmt_HASWATER, calcGoodsAmt_HASCOUNTER, calcGoodsAmt_WATERSTMAMOUNT, calcGoodsAmt_WATERSTMGOODS, calcGoodsAmt_WATERCLCGOODS, calcGoodsAmt_WATERCLCAMOUNT, calcGoodsAmt_IRRIGATIONSTMAMOUNT, calcGoodsAmt_IRRIGATIONSTMGOODS, calcGoodsAmt_IRRIGATIONCLCAMOUNT, calcGoodsAmt_IRRIGATIONCLCGOODS, calcGoodsAmt_DRAINAGECLCGOODS, calcGoodsAmt_DrainClcAmt, calcGoodsAmt_HasDrain, calcGoodsAmt_DrainStmAmt, calcGoodsAmt_DrainStmGoods);
        }
    
        public virtual int sp_Global_SubSP_Calc_spr_CalcIndication(Nullable<System.DateTime> calcIndication_StartDate, Nullable<System.DateTime> calcIndication_EndDate, ObjectParameter calcIndication_WaterClcGoods)
        {
            var calcIndication_StartDateParameter = calcIndication_StartDate.HasValue ?
                new ObjectParameter("CalcIndication_StartDate", calcIndication_StartDate) :
                new ObjectParameter("CalcIndication_StartDate", typeof(System.DateTime));
    
            var calcIndication_EndDateParameter = calcIndication_EndDate.HasValue ?
                new ObjectParameter("CalcIndication_EndDate", calcIndication_EndDate) :
                new ObjectParameter("CalcIndication_EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_Calc_spr_CalcIndication", calcIndication_StartDateParameter, calcIndication_EndDateParameter, calcIndication_WaterClcGoods);
        }
    
        public virtual int sp_Global_SubSP_Calc_spr_CalcNewCredDeb(Nullable<System.DateTime> calcNewCredDeb_StartDate, Nullable<System.DateTime> calcNewCredDeb_EndDate, Nullable<int> calcNewCredDeb_PrivIntv, Nullable<int> calcNewCredDeb_Contract, Nullable<decimal> calcNewCredDeb_DutyEnd, Nullable<decimal> calcNewCredDeb_DutyStart, Nullable<decimal> calcNewCredDeb_OldDutyEnd, Nullable<decimal> calcNewCredDeb_OldDutySt, Nullable<decimal> calcNewCredDeb_Pym, Nullable<decimal> calcNewCredDeb_PmCorr, Nullable<decimal> calcNewCredDeb_Amount, Nullable<decimal> calcNewCredDeb_StmAmt, Nullable<decimal> calcNewCredDeb_SumFsm, Nullable<decimal> calcNewCredDeb_OldFsm, Nullable<short> calcNewCredDeb_TableType, Nullable<short> calcNewCredDeb_OldDebtCharge, ObjectParameter calcNewCredDeb_OldDutyEndNew, ObjectParameter calcNewCredDeb_NewCredCovAm, ObjectParameter calcNewCredDeb_NewCredCovFsm, ObjectParameter calcNewCredDeb_NewCredCovPmCorr, ObjectParameter calcNewCredDeb_NewCredIncrAmStm, ObjectParameter calcNewCredDeb_NewCredIncrFsm, ObjectParameter calcNewCredDeb_NewCredIncrPm, ObjectParameter calcNewCredDeb_NewDebCovAmStm, ObjectParameter calcNewCredDeb_NewDebCovFsm, ObjectParameter calcNewCredDeb_NewDebCovPm, ObjectParameter calcNewCredDeb_NewDebIncrAm, ObjectParameter calcNewCredDeb_NewDebIncrFsm, ObjectParameter calcNewCredDeb_NewDebIncrPmCorr, ObjectParameter calcNewCredDeb_OldCredCovAm, ObjectParameter calcNewCredDeb_OldCredCovFsm, ObjectParameter calcNewCredDeb_OldCredIncrFsm, ObjectParameter calcNewCredDeb_OldDebCovFsm, ObjectParameter calcNewCredDeb_OldDebCovNewCred, ObjectParameter calcNewCredDeb_OldDebIncrFsm, ObjectParameter calcNewCredDeb_StrD, ObjectParameter calcNewCredDeb_StrP)
        {
            var calcNewCredDeb_StartDateParameter = calcNewCredDeb_StartDate.HasValue ?
                new ObjectParameter("CalcNewCredDeb_StartDate", calcNewCredDeb_StartDate) :
                new ObjectParameter("CalcNewCredDeb_StartDate", typeof(System.DateTime));
    
            var calcNewCredDeb_EndDateParameter = calcNewCredDeb_EndDate.HasValue ?
                new ObjectParameter("CalcNewCredDeb_EndDate", calcNewCredDeb_EndDate) :
                new ObjectParameter("CalcNewCredDeb_EndDate", typeof(System.DateTime));
    
            var calcNewCredDeb_PrivIntvParameter = calcNewCredDeb_PrivIntv.HasValue ?
                new ObjectParameter("CalcNewCredDeb_PrivIntv", calcNewCredDeb_PrivIntv) :
                new ObjectParameter("CalcNewCredDeb_PrivIntv", typeof(int));
    
            var calcNewCredDeb_ContractParameter = calcNewCredDeb_Contract.HasValue ?
                new ObjectParameter("CalcNewCredDeb_Contract", calcNewCredDeb_Contract) :
                new ObjectParameter("CalcNewCredDeb_Contract", typeof(int));
    
            var calcNewCredDeb_DutyEndParameter = calcNewCredDeb_DutyEnd.HasValue ?
                new ObjectParameter("CalcNewCredDeb_DutyEnd", calcNewCredDeb_DutyEnd) :
                new ObjectParameter("CalcNewCredDeb_DutyEnd", typeof(decimal));
    
            var calcNewCredDeb_DutyStartParameter = calcNewCredDeb_DutyStart.HasValue ?
                new ObjectParameter("CalcNewCredDeb_DutyStart", calcNewCredDeb_DutyStart) :
                new ObjectParameter("CalcNewCredDeb_DutyStart", typeof(decimal));
    
            var calcNewCredDeb_OldDutyEndParameter = calcNewCredDeb_OldDutyEnd.HasValue ?
                new ObjectParameter("CalcNewCredDeb_OldDutyEnd", calcNewCredDeb_OldDutyEnd) :
                new ObjectParameter("CalcNewCredDeb_OldDutyEnd", typeof(decimal));
    
            var calcNewCredDeb_OldDutyStParameter = calcNewCredDeb_OldDutySt.HasValue ?
                new ObjectParameter("CalcNewCredDeb_OldDutySt", calcNewCredDeb_OldDutySt) :
                new ObjectParameter("CalcNewCredDeb_OldDutySt", typeof(decimal));
    
            var calcNewCredDeb_PymParameter = calcNewCredDeb_Pym.HasValue ?
                new ObjectParameter("CalcNewCredDeb_Pym", calcNewCredDeb_Pym) :
                new ObjectParameter("CalcNewCredDeb_Pym", typeof(decimal));
    
            var calcNewCredDeb_PmCorrParameter = calcNewCredDeb_PmCorr.HasValue ?
                new ObjectParameter("CalcNewCredDeb_PmCorr", calcNewCredDeb_PmCorr) :
                new ObjectParameter("CalcNewCredDeb_PmCorr", typeof(decimal));
    
            var calcNewCredDeb_AmountParameter = calcNewCredDeb_Amount.HasValue ?
                new ObjectParameter("CalcNewCredDeb_Amount", calcNewCredDeb_Amount) :
                new ObjectParameter("CalcNewCredDeb_Amount", typeof(decimal));
    
            var calcNewCredDeb_StmAmtParameter = calcNewCredDeb_StmAmt.HasValue ?
                new ObjectParameter("CalcNewCredDeb_StmAmt", calcNewCredDeb_StmAmt) :
                new ObjectParameter("CalcNewCredDeb_StmAmt", typeof(decimal));
    
            var calcNewCredDeb_SumFsmParameter = calcNewCredDeb_SumFsm.HasValue ?
                new ObjectParameter("CalcNewCredDeb_SumFsm", calcNewCredDeb_SumFsm) :
                new ObjectParameter("CalcNewCredDeb_SumFsm", typeof(decimal));
    
            var calcNewCredDeb_OldFsmParameter = calcNewCredDeb_OldFsm.HasValue ?
                new ObjectParameter("CalcNewCredDeb_OldFsm", calcNewCredDeb_OldFsm) :
                new ObjectParameter("CalcNewCredDeb_OldFsm", typeof(decimal));
    
            var calcNewCredDeb_TableTypeParameter = calcNewCredDeb_TableType.HasValue ?
                new ObjectParameter("CalcNewCredDeb_TableType", calcNewCredDeb_TableType) :
                new ObjectParameter("CalcNewCredDeb_TableType", typeof(short));
    
            var calcNewCredDeb_OldDebtChargeParameter = calcNewCredDeb_OldDebtCharge.HasValue ?
                new ObjectParameter("CalcNewCredDeb_OldDebtCharge", calcNewCredDeb_OldDebtCharge) :
                new ObjectParameter("CalcNewCredDeb_OldDebtCharge", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_Calc_spr_CalcNewCredDeb", calcNewCredDeb_StartDateParameter, calcNewCredDeb_EndDateParameter, calcNewCredDeb_PrivIntvParameter, calcNewCredDeb_ContractParameter, calcNewCredDeb_DutyEndParameter, calcNewCredDeb_DutyStartParameter, calcNewCredDeb_OldDutyEndParameter, calcNewCredDeb_OldDutyStParameter, calcNewCredDeb_PymParameter, calcNewCredDeb_PmCorrParameter, calcNewCredDeb_AmountParameter, calcNewCredDeb_StmAmtParameter, calcNewCredDeb_SumFsmParameter, calcNewCredDeb_OldFsmParameter, calcNewCredDeb_TableTypeParameter, calcNewCredDeb_OldDebtChargeParameter, calcNewCredDeb_OldDutyEndNew, calcNewCredDeb_NewCredCovAm, calcNewCredDeb_NewCredCovFsm, calcNewCredDeb_NewCredCovPmCorr, calcNewCredDeb_NewCredIncrAmStm, calcNewCredDeb_NewCredIncrFsm, calcNewCredDeb_NewCredIncrPm, calcNewCredDeb_NewDebCovAmStm, calcNewCredDeb_NewDebCovFsm, calcNewCredDeb_NewDebCovPm, calcNewCredDeb_NewDebIncrAm, calcNewCredDeb_NewDebIncrFsm, calcNewCredDeb_NewDebIncrPmCorr, calcNewCredDeb_OldCredCovAm, calcNewCredDeb_OldCredCovFsm, calcNewCredDeb_OldCredIncrFsm, calcNewCredDeb_OldDebCovFsm, calcNewCredDeb_OldDebCovNewCred, calcNewCredDeb_OldDebIncrFsm, calcNewCredDeb_StrD, calcNewCredDeb_StrP);
        }
    
        public virtual int sp_Global_SubSP_Calc_spr_CalcOnlyCreditDebt(Nullable<decimal> calcOnlyCreditDebt_DutyEnd, Nullable<decimal> calcOnlyCreditDebt_DutyStart, Nullable<decimal> calcOnlyCreditDebt_OldDutyEnd, Nullable<decimal> calcOnlyCreditDebt_OldDutySt, Nullable<decimal> calcOnlyCreditDebt_Pym, Nullable<decimal> calcOnlyCreditDebt_PmCorr, Nullable<decimal> calcOnlyCreditDebt_Amount, Nullable<decimal> calcOnlyCreditDebt_StmAmt, Nullable<decimal> calcOnlyCreditDebt_SumFsm, Nullable<decimal> calcOnlyCreditDebt_OldFsm, Nullable<short> calcOnlyCreditDebt_OldDebtCharge, ObjectParameter calcOnlyCreditDebt_OldDutyEndNew, ObjectParameter calcOnlyCreditDebt_NewCredCovAm, ObjectParameter calcOnlyCreditDebt_NewCredCovFsm, ObjectParameter calcOnlyCreditDebt_NewCredCovPmCorr, ObjectParameter calcOnlyCreditDebt_NewCredIncrAmStm, ObjectParameter calcOnlyCreditDebt_NewCredIncrFsm, ObjectParameter calcOnlyCreditDebt_NewCredIncrPm, ObjectParameter calcOnlyCreditDebt_NewDebCovAmStm, ObjectParameter calcOnlyCreditDebt_NewDebCovFsm, ObjectParameter calcOnlyCreditDebt_NewDebCovPm, ObjectParameter calcOnlyCreditDebt_NewDebIncrAm, ObjectParameter calcOnlyCreditDebt_NewDebIncrFsm, ObjectParameter calcOnlyCreditDebt_NewDebIncrPmCorr, ObjectParameter calcOnlyCreditDebt_OldCredCovAm, ObjectParameter calcOnlyCreditDebt_OldCredCovFsm, ObjectParameter calcOnlyCreditDebt_OldCredIncrFsm, ObjectParameter calcOnlyCreditDebt_OldDebCovFsm, ObjectParameter calcOnlyCreditDebt_OldDebCovNewCred, ObjectParameter calcOnlyCreditDebt_OldDebIncrFsm)
        {
            var calcOnlyCreditDebt_DutyEndParameter = calcOnlyCreditDebt_DutyEnd.HasValue ?
                new ObjectParameter("CalcOnlyCreditDebt_DutyEnd", calcOnlyCreditDebt_DutyEnd) :
                new ObjectParameter("CalcOnlyCreditDebt_DutyEnd", typeof(decimal));
    
            var calcOnlyCreditDebt_DutyStartParameter = calcOnlyCreditDebt_DutyStart.HasValue ?
                new ObjectParameter("CalcOnlyCreditDebt_DutyStart", calcOnlyCreditDebt_DutyStart) :
                new ObjectParameter("CalcOnlyCreditDebt_DutyStart", typeof(decimal));
    
            var calcOnlyCreditDebt_OldDutyEndParameter = calcOnlyCreditDebt_OldDutyEnd.HasValue ?
                new ObjectParameter("CalcOnlyCreditDebt_OldDutyEnd", calcOnlyCreditDebt_OldDutyEnd) :
                new ObjectParameter("CalcOnlyCreditDebt_OldDutyEnd", typeof(decimal));
    
            var calcOnlyCreditDebt_OldDutyStParameter = calcOnlyCreditDebt_OldDutySt.HasValue ?
                new ObjectParameter("CalcOnlyCreditDebt_OldDutySt", calcOnlyCreditDebt_OldDutySt) :
                new ObjectParameter("CalcOnlyCreditDebt_OldDutySt", typeof(decimal));
    
            var calcOnlyCreditDebt_PymParameter = calcOnlyCreditDebt_Pym.HasValue ?
                new ObjectParameter("CalcOnlyCreditDebt_Pym", calcOnlyCreditDebt_Pym) :
                new ObjectParameter("CalcOnlyCreditDebt_Pym", typeof(decimal));
    
            var calcOnlyCreditDebt_PmCorrParameter = calcOnlyCreditDebt_PmCorr.HasValue ?
                new ObjectParameter("CalcOnlyCreditDebt_PmCorr", calcOnlyCreditDebt_PmCorr) :
                new ObjectParameter("CalcOnlyCreditDebt_PmCorr", typeof(decimal));
    
            var calcOnlyCreditDebt_AmountParameter = calcOnlyCreditDebt_Amount.HasValue ?
                new ObjectParameter("CalcOnlyCreditDebt_Amount", calcOnlyCreditDebt_Amount) :
                new ObjectParameter("CalcOnlyCreditDebt_Amount", typeof(decimal));
    
            var calcOnlyCreditDebt_StmAmtParameter = calcOnlyCreditDebt_StmAmt.HasValue ?
                new ObjectParameter("CalcOnlyCreditDebt_StmAmt", calcOnlyCreditDebt_StmAmt) :
                new ObjectParameter("CalcOnlyCreditDebt_StmAmt", typeof(decimal));
    
            var calcOnlyCreditDebt_SumFsmParameter = calcOnlyCreditDebt_SumFsm.HasValue ?
                new ObjectParameter("CalcOnlyCreditDebt_SumFsm", calcOnlyCreditDebt_SumFsm) :
                new ObjectParameter("CalcOnlyCreditDebt_SumFsm", typeof(decimal));
    
            var calcOnlyCreditDebt_OldFsmParameter = calcOnlyCreditDebt_OldFsm.HasValue ?
                new ObjectParameter("CalcOnlyCreditDebt_OldFsm", calcOnlyCreditDebt_OldFsm) :
                new ObjectParameter("CalcOnlyCreditDebt_OldFsm", typeof(decimal));
    
            var calcOnlyCreditDebt_OldDebtChargeParameter = calcOnlyCreditDebt_OldDebtCharge.HasValue ?
                new ObjectParameter("CalcOnlyCreditDebt_OldDebtCharge", calcOnlyCreditDebt_OldDebtCharge) :
                new ObjectParameter("CalcOnlyCreditDebt_OldDebtCharge", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_Calc_spr_CalcOnlyCreditDebt", calcOnlyCreditDebt_DutyEndParameter, calcOnlyCreditDebt_DutyStartParameter, calcOnlyCreditDebt_OldDutyEndParameter, calcOnlyCreditDebt_OldDutyStParameter, calcOnlyCreditDebt_PymParameter, calcOnlyCreditDebt_PmCorrParameter, calcOnlyCreditDebt_AmountParameter, calcOnlyCreditDebt_StmAmtParameter, calcOnlyCreditDebt_SumFsmParameter, calcOnlyCreditDebt_OldFsmParameter, calcOnlyCreditDebt_OldDebtChargeParameter, calcOnlyCreditDebt_OldDutyEndNew, calcOnlyCreditDebt_NewCredCovAm, calcOnlyCreditDebt_NewCredCovFsm, calcOnlyCreditDebt_NewCredCovPmCorr, calcOnlyCreditDebt_NewCredIncrAmStm, calcOnlyCreditDebt_NewCredIncrFsm, calcOnlyCreditDebt_NewCredIncrPm, calcOnlyCreditDebt_NewDebCovAmStm, calcOnlyCreditDebt_NewDebCovFsm, calcOnlyCreditDebt_NewDebCovPm, calcOnlyCreditDebt_NewDebIncrAm, calcOnlyCreditDebt_NewDebIncrFsm, calcOnlyCreditDebt_NewDebIncrPmCorr, calcOnlyCreditDebt_OldCredCovAm, calcOnlyCreditDebt_OldCredCovFsm, calcOnlyCreditDebt_OldCredIncrFsm, calcOnlyCreditDebt_OldDebCovFsm, calcOnlyCreditDebt_OldDebCovNewCred, calcOnlyCreditDebt_OldDebIncrFsm);
        }
    
        public virtual int sp_Global_SubSP_Calc_spr_CalcSpyGoods(Nullable<int> calcIntv, Nullable<int> branch, Nullable<short> calcLev, Nullable<double> norm_WATERSPEED)
        {
            var calcIntvParameter = calcIntv.HasValue ?
                new ObjectParameter("CalcIntv", calcIntv) :
                new ObjectParameter("CalcIntv", typeof(int));
    
            var branchParameter = branch.HasValue ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(int));
    
            var calcLevParameter = calcLev.HasValue ?
                new ObjectParameter("CalcLev", calcLev) :
                new ObjectParameter("CalcLev", typeof(short));
    
            var norm_WATERSPEEDParameter = norm_WATERSPEED.HasValue ?
                new ObjectParameter("Norm_WATERSPEED", norm_WATERSPEED) :
                new ObjectParameter("Norm_WATERSPEED", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_Calc_spr_CalcSpyGoods", calcIntvParameter, branchParameter, calcLevParameter, norm_WATERSPEEDParameter);
        }
    
        public virtual int sp_Global_SubSP_ChangingBillingCycleOfContract(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_ChangingBillingCycleOfContract", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_ChangingEventDateOfIndicationForUpdatingCounterCreateDate(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_ChangingEventDateOfIndicationForUpdatingCounterCreateDate", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_ChangingHasNoDrainageOfWaterPointForDestroyingAndDeletingDrainagePoint(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_ChangingHasNoDrainageOfWaterPointForDestroyingAndDeletingDrainagePoint", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_ChangingIsTurnedOverOfIndication(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_ChangingIsTurnedOverOfIndication", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_ChangingPreviousValuesOfIndicationsForDeletingIndication(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_ChangingPreviousValuesOfIndicationsForDeletingIndication", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_ChangingRegularOfIndication(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_ChangingRegularOfIndication", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_ChangingRegularOfIndicationForRestoringCounter(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_ChangingRegularOfIndicationForRestoringCounter", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_ChangingSPNameForDoerTable(string sP_Name)
        {
            var sP_NameParameter = sP_Name != null ?
                new ObjectParameter("SP_Name", sP_Name) :
                new ObjectParameter("SP_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_ChangingSPNameForDoerTable", sP_NameParameter);
        }
    
        public virtual int sp_Global_SubSP_ChangingSupplyScheduleOfSupplyPoint(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_ChangingSupplyScheduleOfSupplyPoint", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_ChangingTerritoryOfContract(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_ChangingTerritoryOfContract", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_CheckAndCompareObjectCreateDateWithChildCreateDateAndCalcInterval(string child_Table_Name, string child_Column_Name, string parent_Table_Name, Nullable<int> parent_Object_ID, Nullable<System.DateTime> objectCreateDate)
        {
            var child_Table_NameParameter = child_Table_Name != null ?
                new ObjectParameter("Child_Table_Name", child_Table_Name) :
                new ObjectParameter("Child_Table_Name", typeof(string));
    
            var child_Column_NameParameter = child_Column_Name != null ?
                new ObjectParameter("Child_Column_Name", child_Column_Name) :
                new ObjectParameter("Child_Column_Name", typeof(string));
    
            var parent_Table_NameParameter = parent_Table_Name != null ?
                new ObjectParameter("Parent_Table_Name", parent_Table_Name) :
                new ObjectParameter("Parent_Table_Name", typeof(string));
    
            var parent_Object_IDParameter = parent_Object_ID.HasValue ?
                new ObjectParameter("Parent_Object_ID", parent_Object_ID) :
                new ObjectParameter("Parent_Object_ID", typeof(int));
    
            var objectCreateDateParameter = objectCreateDate.HasValue ?
                new ObjectParameter("ObjectCreateDate", objectCreateDate) :
                new ObjectParameter("ObjectCreateDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_CheckAndCompareObjectCreateDateWithChildCreateDateAndCalcInterval", child_Table_NameParameter, child_Column_NameParameter, parent_Table_NameParameter, parent_Object_IDParameter, objectCreateDateParameter);
        }
    
        public virtual int sp_Global_SubSP_CheckAndCompareObjectCreateDateWithParentCreateDateAndCalcInterval(string parent_Table_Name, Nullable<int> parent_Object_ID, Nullable<int> object_ID, Nullable<System.DateTime> objectCreateDate, string object_Table_Name)
        {
            var parent_Table_NameParameter = parent_Table_Name != null ?
                new ObjectParameter("Parent_Table_Name", parent_Table_Name) :
                new ObjectParameter("Parent_Table_Name", typeof(string));
    
            var parent_Object_IDParameter = parent_Object_ID.HasValue ?
                new ObjectParameter("Parent_Object_ID", parent_Object_ID) :
                new ObjectParameter("Parent_Object_ID", typeof(int));
    
            var object_IDParameter = object_ID.HasValue ?
                new ObjectParameter("Object_ID", object_ID) :
                new ObjectParameter("Object_ID", typeof(int));
    
            var objectCreateDateParameter = objectCreateDate.HasValue ?
                new ObjectParameter("ObjectCreateDate", objectCreateDate) :
                new ObjectParameter("ObjectCreateDate", typeof(System.DateTime));
    
            var object_Table_NameParameter = object_Table_Name != null ?
                new ObjectParameter("Object_Table_Name", object_Table_Name) :
                new ObjectParameter("Object_Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_CheckAndCompareObjectCreateDateWithParentCreateDateAndCalcInterval", parent_Table_NameParameter, parent_Object_IDParameter, object_IDParameter, objectCreateDateParameter, object_Table_NameParameter);
        }
    
        public virtual int sp_Global_SubSP_CheckAndUpdate_CalculatedField(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_CheckAndUpdate_CalculatedField", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_CheckAndValidateIndicationAndVolumeOfCounter(Nullable<int> iNDICATION_ID, Nullable<int> cOUNTER_ID, Nullable<System.DateTime> eVENTDATE, Nullable<double> iNDICATION, Nullable<short> iSTURNEDOVER, Nullable<short> rEGULAR, Nullable<int> bILLINGCYCLEVISIT, Nullable<int> iNDICATIONMAP, Nullable<double> mAX_DIFF_VOLUME_OF_INDICATIONS, Nullable<int> dONT_CHECK_REGULAR_0)
        {
            var iNDICATION_IDParameter = iNDICATION_ID.HasValue ?
                new ObjectParameter("INDICATION_ID", iNDICATION_ID) :
                new ObjectParameter("INDICATION_ID", typeof(int));
    
            var cOUNTER_IDParameter = cOUNTER_ID.HasValue ?
                new ObjectParameter("COUNTER_ID", cOUNTER_ID) :
                new ObjectParameter("COUNTER_ID", typeof(int));
    
            var eVENTDATEParameter = eVENTDATE.HasValue ?
                new ObjectParameter("EVENTDATE", eVENTDATE) :
                new ObjectParameter("EVENTDATE", typeof(System.DateTime));
    
            var iNDICATIONParameter = iNDICATION.HasValue ?
                new ObjectParameter("INDICATION", iNDICATION) :
                new ObjectParameter("INDICATION", typeof(double));
    
            var iSTURNEDOVERParameter = iSTURNEDOVER.HasValue ?
                new ObjectParameter("ISTURNEDOVER", iSTURNEDOVER) :
                new ObjectParameter("ISTURNEDOVER", typeof(short));
    
            var rEGULARParameter = rEGULAR.HasValue ?
                new ObjectParameter("REGULAR", rEGULAR) :
                new ObjectParameter("REGULAR", typeof(short));
    
            var bILLINGCYCLEVISITParameter = bILLINGCYCLEVISIT.HasValue ?
                new ObjectParameter("BILLINGCYCLEVISIT", bILLINGCYCLEVISIT) :
                new ObjectParameter("BILLINGCYCLEVISIT", typeof(int));
    
            var iNDICATIONMAPParameter = iNDICATIONMAP.HasValue ?
                new ObjectParameter("INDICATIONMAP", iNDICATIONMAP) :
                new ObjectParameter("INDICATIONMAP", typeof(int));
    
            var mAX_DIFF_VOLUME_OF_INDICATIONSParameter = mAX_DIFF_VOLUME_OF_INDICATIONS.HasValue ?
                new ObjectParameter("MAX_DIFF_VOLUME_OF_INDICATIONS", mAX_DIFF_VOLUME_OF_INDICATIONS) :
                new ObjectParameter("MAX_DIFF_VOLUME_OF_INDICATIONS", typeof(double));
    
            var dONT_CHECK_REGULAR_0Parameter = dONT_CHECK_REGULAR_0.HasValue ?
                new ObjectParameter("DONT_CHECK_REGULAR_0", dONT_CHECK_REGULAR_0) :
                new ObjectParameter("DONT_CHECK_REGULAR_0", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_CheckAndValidateIndicationAndVolumeOfCounter", iNDICATION_IDParameter, cOUNTER_IDParameter, eVENTDATEParameter, iNDICATIONParameter, iSTURNEDOVERParameter, rEGULARParameter, bILLINGCYCLEVISITParameter, iNDICATIONMAPParameter, mAX_DIFF_VOLUME_OF_INDICATIONSParameter, dONT_CHECK_REGULAR_0Parameter);
        }
    
        public virtual int sp_Global_SubSP_CheckAndValidatePrivilegesAndSettings(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_CheckAndValidatePrivilegesAndSettings", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_CheckConsumersCalculationForChangingCalcIntervalOfBranch(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_CheckConsumersCalculationForChangingCalcIntervalOfBranch", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_DefineMAXDateRange(Nullable<int> calc_Interval1, Nullable<int> calc_Interval2, ObjectParameter startDate, ObjectParameter endDate)
        {
            var calc_Interval1Parameter = calc_Interval1.HasValue ?
                new ObjectParameter("Calc_Interval1", calc_Interval1) :
                new ObjectParameter("Calc_Interval1", typeof(int));
    
            var calc_Interval2Parameter = calc_Interval2.HasValue ?
                new ObjectParameter("Calc_Interval2", calc_Interval2) :
                new ObjectParameter("Calc_Interval2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_DefineMAXDateRange", calc_Interval1Parameter, calc_Interval2Parameter, startDate, endDate);
        }
    
        public virtual int sp_Global_SubSP_DeleteHierarchicalEntityWithoutAnyChecking(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_DeleteHierarchicalEntityWithoutAnyChecking", table_NameParameter);
        }
    
        public virtual int sp_Global_SubSP_PostActionOfAmountsOfFSM(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PostActionOfAmountsOfFSM", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PostActionOfBranchCurrentInterval(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PostActionOfBranchCurrentInterval", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PostActionOfBSGroup(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PostActionOfBSGroup", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PostActionOfBSPrivilege(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PostActionOfBSPrivilege", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PostActionOfBSUser(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PostActionOfBSUser", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PostActionOfChangingRegularOfIndicationForCounter(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PostActionOfChangingRegularOfIndicationForCounter", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PostActionOfCustomerLocation(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PostActionOfCustomerLocation", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PostActionOfDebtCoverContract(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PostActionOfDebtCoverContract", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PostActionOfDebtCoverContract_Delete(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PostActionOfDebtCoverContract_Delete", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PostActionOfLocation(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PostActionOfLocation", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfAmountOfOldDutyFSM(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfAmountOfOldDutyFSM", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfAmountsOfFSM(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfAmountsOfFSM", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfBranchName(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfBranchName", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfCalcMethod(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfCalcMethod", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfCreatedate_DebtSchedule(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfCreatedate_DebtSchedule", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfCustomerLocation(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfCustomerLocation", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfCustomerTerritoryLocation(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfCustomerTerritoryLocation", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfDebtCoverContract(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfDebtCoverContract", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfDebtSchedule_Delete(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfDebtSchedule_Delete", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfDebtSchedule_Restore(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfDebtSchedule_Restore", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfDrainagePointTariff(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfDrainagePointTariff", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfEventdateOfCourtCase(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfEventdateOfCourtCase", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfFinancialStatementMonthsAmountYear(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfFinancialStatementMonthsAmountYear", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfGoodsDefaultOfConsumer(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfGoodsDefaultOfConsumer", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfIndication(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfIndication", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfIrrigation(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfIrrigation", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfIrrigationTariff(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfIrrigationTariff", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfMAXDrainagePointTariff(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfMAXDrainagePointTariff", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfMAXIrrigationTariff(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfMAXIrrigationTariff", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfMAXPenalty(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfMAXPenalty", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfMAXWaterPointTariff(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfMAXWaterPointTariff", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfMINDrainagePointTariff(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfMINDrainagePointTariff", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfMINIrrigationTariff(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfMINIrrigationTariff", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfMINWaterPointTariff(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfMINWaterPointTariff", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfRescheduledAmount(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfRescheduledAmount", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfStatementAmount(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfStatementAmount", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfStatementGoods(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfStatementGoods", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfStatementMonths(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfStatementMonths", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfSupplyNodeCalcMethod(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfSupplyNodeCalcMethod", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfWaterPointCalcMethod(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfWaterPointCalcMethod", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfWaterPointIrrigation(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfWaterPointIrrigation", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_PreActionOfWaterPointTariff(string table_Name, Nullable<short> actionType)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_PreActionOfWaterPointTariff", table_NameParameter, actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_SaveUserActionLog(Nullable<short> actionType)
        {
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_SaveUserActionLog", actionTypeParameter);
        }
    
        public virtual int sp_Global_SubSP_SplitTablePathsColumn()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_SplitTablePathsColumn");
        }
    
        public virtual int sp_Global_SubSP_SplitTablesColumnAndMakeRelationTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_SubSP_SplitTablesColumnAndMakeRelationTables");
        }
    
        public virtual int sp_Global_Update(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Global_Update", table_NameParameter);
        }
    
        public virtual ObjectResult<string> sp_Monitoring_CheckCompareTableChanges(string table_name)
        {
            var table_nameParameter = table_name != null ?
                new ObjectParameter("table_name", table_name) :
                new ObjectParameter("table_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_Monitoring_CheckCompareTableChanges", table_nameParameter);
        }
    
        public virtual int sp_Monitoring_FindCustomerTablesAndObjectsOutOfBranchRange()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Monitoring_FindCustomerTablesAndObjectsOutOfBranchRange");
        }
    
        public virtual int sp_Monitoring_FindCustomerTablesAndObjectsOutOfBranchRange_FillInRealTable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Monitoring_FindCustomerTablesAndObjectsOutOfBranchRange_FillInRealTable");
        }
    
        public virtual int sp_Monitoring_FindOrphanedCustomerTablesAndObjects()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Monitoring_FindOrphanedCustomerTablesAndObjects");
        }
    
        public virtual int sp_Monitoring_FindOrphanedCustomerTablesAndObjects_FillInRealTable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Monitoring_FindOrphanedCustomerTablesAndObjects_FillInRealTable");
        }
    
        public virtual ObjectResult<sp_Monitoring_FindRepeatedIDsListForUniqueObjects_Result> sp_Monitoring_FindRepeatedIDsListForUniqueObjects()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Monitoring_FindRepeatedIDsListForUniqueObjects_Result>("sp_Monitoring_FindRepeatedIDsListForUniqueObjects");
        }
    
        public virtual int SP_RPT_ANALYSISWATERSUPPLYVOLUMES(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_ANALYSISWATERSUPPLYVOLUMES", table_NameParameter);
        }
    
        public virtual int SP_RPT_BILLINGCYCLEREADINGLIST()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BILLINGCYCLEREADINGLIST");
        }
    
        public virtual int SP_RPT_BILLINGCYCLEROUTEINDIVIDUALIDREMINDER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BILLINGCYCLEROUTEINDIVIDUALIDREMINDER");
        }
    
        public virtual int SP_RPT_BILLINGCYCLEROUTELIST()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BILLINGCYCLEROUTELIST");
        }
    
        public virtual int SP_RPT_BILLINGCYCLEROUTELISTOFDEBTS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BILLINGCYCLEROUTELISTOFDEBTS");
        }
    
        public virtual int SP_RPT_BILLINGCYCLEROUTELISTOFDEBTS2PERIODS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BILLINGCYCLEROUTELISTOFDEBTS2PERIODS");
        }
    
        public virtual int SP_RPT_BILLINGCYCLEROUTEWATERSUPPLYINVOICE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BILLINGCYCLEROUTEWATERSUPPLYINVOICE");
        }
    
        public virtual int SP_RPT_BRA_AMOUNTOFVATTOBEPAID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_AMOUNTOFVATTOBEPAID");
        }
    
        public virtual int SP_RPT_BRA_ANALYSISBYMETHODSOFCALC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_ANALYSISBYMETHODSOFCALC");
        }
    
        public virtual int SP_RPT_BRA_ANALYSISCONSUMERSWITHWATERMETER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_ANALYSISCONSUMERSWITHWATERMETER");
        }
    
        public virtual int SP_RPT_BRA_ANALYSISOFMETERTDVOLUMESOFCONSUMER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_ANALYSISOFMETERTDVOLUMESOFCONSUMER");
        }
    
        public virtual int SP_RPT_BRA_ANALYSISONNUMBEROFPAYMENTS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_ANALYSISONNUMBEROFPAYMENTS");
        }
    
        public virtual int SP_RPT_BRA_ANALYSISONVOLUMESWATERSUPPLY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_ANALYSISONVOLUMESWATERSUPPLY");
        }
    
        public virtual int SP_RPT_BRA_ANALYSYSCOMMERCIAL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_ANALYSYSCOMMERCIAL");
        }
    
        public virtual int SP_RPT_BRA_CHANGESINMETHODSOFCALGULATIONS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_CHANGESINMETHODSOFCALGULATIONS");
        }
    
        public virtual int SP_RPT_BRA_COLLECTIONBYINSPECTORS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_COLLECTIONBYINSPECTORS");
        }
    
        public virtual int SP_RPT_BRA_COLLECTIONBYSOURCES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_COLLECTIONBYSOURCES");
        }
    
        public virtual int SP_RPT_BRA_COLLECTIONBYTERRITORIES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_COLLECTIONBYTERRITORIES");
        }
    
        public virtual int SP_RPT_BRA_COLLECTIONRATE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_COLLECTIONRATE");
        }
    
        public virtual int SP_RPT_BRA_CONSUMERSTATUS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_CONSUMERSTATUS");
        }
    
        public virtual int SP_RPT_BRA_CONSUMERSTHATDIDNOTRECEIVEDSERVICES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_CONSUMERSTHATDIDNOTRECEIVEDSERVICES");
        }
    
        public virtual int SP_RPT_BRA_COUNTERS_COUNT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_COUNTERS_COUNT");
        }
    
        public virtual int SP_RPT_BRA_CUSTOMERSERVICETYPES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_CUSTOMERSERVICETYPES");
        }
    
        public virtual int SP_RPT_BRA_DEBT_ANNUAL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_DEBT_ANNUAL");
        }
    
        public virtual int SP_RPT_BRA_DEBTCORRECTIONSANALYSIS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_DEBTCORRECTIONSANALYSIS");
        }
    
        public virtual int SP_RPT_BRA_DEBTRECOMOUTATIONSANALYSIS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_DEBTRECOMOUTATIONSANALYSIS");
        }
    
        public virtual int SP_RPT_BRA_DEBTSCHEDULE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_DEBTSCHEDULE");
        }
    
        public virtual int SP_RPT_BRA_DEBTSCHEDULE_DETAIL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_DEBTSCHEDULE_DETAIL");
        }
    
        public virtual int SP_RPT_BRA_INSPECTIONS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_INSPECTIONS");
        }
    
        public virtual int SP_RPT_BRA_LISTOFDEBTS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_LISTOFDEBTS");
        }
    
        public virtual int SP_RPT_BRA_LISTOFDEBTS2PERIODS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_LISTOFDEBTS2PERIODS");
        }
    
        public virtual int SP_RPT_BRA_MAINFIGURESBYTOWNS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_MAINFIGURESBYTOWNS");
        }
    
        public virtual int SP_RPT_BRA_MAINFIGURESONWATERSUPPLY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_MAINFIGURESONWATERSUPPLY");
        }
    
        public virtual int SP_RPT_BRA_PAYMENTSBYREGISTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_PAYMENTSBYREGISTER");
        }
    
        public virtual int SP_RPT_BRA_SALES1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_SALES1");
        }
    
        public virtual int SP_RPT_BRA_SALES2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_SALES2");
        }
    
        public virtual int SP_RPT_BRA_TAWCONTRACTCOURTCASETASK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_TAWCONTRACTCOURTCASETASK");
        }
    
        public virtual int SP_RPT_BRA_TAWDEBTAGECOVER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_TAWDEBTAGECOVER");
        }
    
        public virtual int SP_RPT_BRA_TAWTERRITORYCONTRACTBILLINGSTATUS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_TAWTERRITORYCONTRACTBILLINGSTATUS");
        }
    
        public virtual int SP_RPT_BRA_TAWTERRITORYDUTYCOVERCONTRACTTASK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_TAWTERRITORYDUTYCOVERCONTRACTTASK");
        }
    
        public virtual int SP_RPT_BRA_TAWTERRITORYOLDDUTYTASK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRA_TAWTERRITORYOLDDUTYTASK");
        }
    
        public virtual int SP_RPT_BRANCH_BRIEF()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_BRANCH_BRIEF");
        }
    
        public virtual int SP_RPT_DEBTPARTIALEXTENDEDPAYMENTS(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_DEBTPARTIALEXTENDEDPAYMENTS", table_NameParameter);
        }
    
        public virtual int SP_RPT_FACTUALTARIFF(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_FACTUALTARIFF", table_NameParameter);
        }
    
        public virtual int SP_RPT_LEVELCOLLECTIONFORCURRENTPERIOD(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_LEVELCOLLECTIONFORCURRENTPERIOD", table_NameParameter);
        }
    
        public virtual int SP_RPT_MAINSALESDATACOMPARATIVE(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_MAINSALESDATACOMPARATIVE", table_NameParameter);
        }
    
        public virtual int SP_RPT_MIX_LISTOFDEBTS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_MIX_LISTOFDEBTS");
        }
    
        public virtual int SP_RPT_MIX_LISTOFDEBTSFOR2PERIODS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_MIX_LISTOFDEBTSFOR2PERIODS");
        }
    
        public virtual int SP_RPT_MIX_LISTOFDEBTSSIMPLE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_MIX_LISTOFDEBTSSIMPLE");
        }
    
        public virtual int SP_RPT_ORG_INSPECTIONS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_ORG_INSPECTIONS");
        }
    
        public virtual int SP_RPT_ORG_INTERCALCULATIONSACT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_ORG_INTERCALCULATIONSACT");
        }
    
        public virtual int SP_RPT_ORG_INVOICE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_ORG_INVOICE");
        }
    
        public virtual int SP_RPT_ORG_JURIDICALPERSONCONTRACT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_ORG_JURIDICALPERSONCONTRACT");
        }
    
        public virtual int SP_RPT_ORG_LISTOFDEBTS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_ORG_LISTOFDEBTS");
        }
    
        public virtual int SP_RPT_ORG_LISTOFDEBTSFOR2PERIODS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_ORG_LISTOFDEBTSFOR2PERIODS");
        }
    
        public virtual int SP_RPT_ORG_LISTOFDEBTSSIMPLE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_ORG_LISTOFDEBTSSIMPLE");
        }
    
        public virtual int SP_RPT_ORG_TAWCONTRACTCOURTCASETASK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_ORG_TAWCONTRACTCOURTCASETASK");
        }
    
        public virtual int SP_RPT_ORG_TAWTERRITORYOLDDUTYTASK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_ORG_TAWTERRITORYOLDDUTYTASK");
        }
    
        public virtual int SP_RPT_PAYMENTSDATA(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_PAYMENTSDATA", table_NameParameter);
        }
    
        public virtual int SP_RPT_RES_COURTNOTICE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_RES_COURTNOTICE");
        }
    
        public virtual int SP_RPT_RES_COURTSTATEMENT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_RES_COURTSTATEMENT");
        }
    
        public virtual int SP_RPT_RES_INDIVIDUALIDREMINDER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_RES_INDIVIDUALIDREMINDER");
        }
    
        public virtual int SP_RPT_RES_INHABITANTCONSUMERCONTRACT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_RES_INHABITANTCONSUMERCONTRACT");
        }
    
        public virtual int SP_RPT_RES_INHABITANTCONSUMERREPORT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_RES_INHABITANTCONSUMERREPORT");
        }
    
        public virtual int SP_RPT_RES_INSPECTIONS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_RES_INSPECTIONS");
        }
    
        public virtual int SP_RPT_RES_LISTOFDEBTS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_RES_LISTOFDEBTS");
        }
    
        public virtual int SP_RPT_RES_LISTOFDEBTSFOR2PERIODS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_RES_LISTOFDEBTSFOR2PERIODS");
        }
    
        public virtual int SP_RPT_RES_LISTOFDEBTSSIMPLE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_RES_LISTOFDEBTSSIMPLE");
        }
    
        public virtual int SP_RPT_RES_TAWCONTRACTCOURTCASETASK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_RES_TAWCONTRACTCOURTCASETASK");
        }
    
        public virtual int SP_RPT_RES_TAWTERRITORYOLDDUTYTASK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_RES_TAWTERRITORYOLDDUTYTASK");
        }
    
        public virtual int SP_RPT_RES_WATERSUPPLYINVOICE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_RES_WATERSUPPLYINVOICE");
        }
    
        public virtual int SP_RPT_SALESPARTIALEXTENDEDPAYMENTS(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_SALESPARTIALEXTENDEDPAYMENTS", table_NameParameter);
        }
    
        public virtual int SP_RPT_SALESPARTIALFORORGANIZATION(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_SALESPARTIALFORORGANIZATION", table_NameParameter);
        }
    
        public virtual int SP_RPT_SALESPARTIALFOTORGANIZAIONEXTENDEDPAYMENTS(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_SALESPARTIALFOTORGANIZAIONEXTENDEDPAYMENTS", table_NameParameter);
        }
    
        public virtual int SP_RPT_SND_SUPPLYNODEREPORT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_SND_SUPPLYNODEREPORT");
        }
    
        public virtual int SP_RPT_TER_ANALYSYSCOMMERCIAL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_TER_ANALYSYSCOMMERCIAL");
        }
    
        public virtual int SP_RPT_TER_COLLECTIONBYTERRITORIES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_TER_COLLECTIONBYTERRITORIES");
        }
    
        public virtual int SP_RPT_TER_CONSUMERSTATUS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_TER_CONSUMERSTATUS");
        }
    
        public virtual int SP_RPT_TER_COURTNOTICE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_TER_COURTNOTICE");
        }
    
        public virtual int SP_RPT_TER_DEBT_ANNUAL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_TER_DEBT_ANNUAL");
        }
    
        public virtual int SP_RPT_TER_DEBTSCHEDULE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_TER_DEBTSCHEDULE");
        }
    
        public virtual int SP_RPT_TER_DEBTSCHEDULE_DETAIL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_TER_DEBTSCHEDULE_DETAIL");
        }
    
        public virtual int SP_RPT_TER_INSPECTIONS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_TER_INSPECTIONS");
        }
    
        public virtual int SP_RPT_TER_LISTOFDEBTS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_TER_LISTOFDEBTS");
        }
    
        public virtual int SP_RPT_TER_LISTOFDEBTS2PERIODS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_TER_LISTOFDEBTS2PERIODS");
        }
    
        public virtual int SP_RPT_TER_TAWCONTRACTBILLINGSTATUS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_TER_TAWCONTRACTBILLINGSTATUS");
        }
    
        public virtual int SP_RPT_TER_TAWCONTRACTCOURTCASETASK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_TER_TAWCONTRACTCOURTCASETASK");
        }
    
        public virtual int SP_RPT_TER_TAWTERRITORYDUTYCOVERCONTRACTTASK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_TER_TAWTERRITORYDUTYCOVERCONTRACTTASK");
        }
    
        public virtual int SP_RPT_TER_TAWTERRITORYOLDDUTYTASK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_TER_TAWTERRITORYOLDDUTYTASK");
        }
    
        public virtual int SP_RPT_TER_TERRITORYBRIEF()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_TER_TERRITORYBRIEF");
        }
    
        public virtual int SP_RPT_TER_TERRITORYREPORT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_TER_TERRITORYREPORT");
        }
    
        public virtual int sp_Setup_ArchivingModifiedDataFromCurrentDBIntoArchivedDB(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Setup_ArchivingModifiedDataFromCurrentDBIntoArchivedDB", table_NameParameter);
        }
    
        public virtual int sp_Setup_ArchivingOnlyModifiedDataFromCurrentDBIntoArchivedDB_HierarchicBranch(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Setup_ArchivingOnlyModifiedDataFromCurrentDBIntoArchivedDB_HierarchicBranch", table_NameParameter);
        }
    
        public virtual int sp_Setup_CopyingManageableDataFromArchivedDBIntoCurrentDB(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Setup_CopyingManageableDataFromArchivedDBIntoCurrentDB", table_NameParameter);
        }
    
        public virtual int sp_Setup_CreationCurrentDB_ForStartUp(string table_Name)
        {
            var table_NameParameter = table_Name != null ?
                new ObjectParameter("Table_Name", table_Name) :
                new ObjectParameter("Table_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Setup_CreationCurrentDB_ForStartUp", table_NameParameter);
        }
    }
}
